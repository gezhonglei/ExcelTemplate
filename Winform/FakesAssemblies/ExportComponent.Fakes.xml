<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ExportComponent.Fakes</name>
    </assembly>
    <members>
        <member name="T:ExportIO.Export.Element.Fakes.ShimBaseElement">
            <summary>ExportIO.Export.Element.BaseElement 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimBaseElement.#ctor(ExportIO.Export.Element.BaseElement)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimBaseElement.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimBaseElement.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimBaseElement.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimBaseElement.Constructor">
            <summary>设置 BaseElement.BaseElement() 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Element.Fakes.ShimBaseElement.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Element.Fakes.ShimCellElement">
            <summary>ExportIO.Export.Element.CellElement 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimCellElement.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimCellElement.#ctor(ExportIO.Export.Element.CellElement)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimCellElement.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimCellElement.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimCellElement.Bind(ExportIO.Export.Element.IEntityGetter{ExportIO.Export.Entity.Cell})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimCellElement.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimCellElement.ConstructorXmlElementIProductRuleGetter">
            <summary>设置 CellElement.CellElement(XmlElement data, IProductRuleGetter sheetElement) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimCellElement.CreateEntity">
            <summary>设置 CellElement.CreateEntity() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimCellElement.parseSourceString">
            <summary>设置 CellElement.parseSource(String str) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Element.Fakes.ShimCellElement.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimCellElement.AllInstances.CreateEntity">
            <summary>设置 CellElement.CreateEntity() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimCellElement.AllInstances.parseSourceString">
            <summary>设置 CellElement.parseSource(String str) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Element.Fakes.ShimDataListElement">
            <summary>ExportIO.Export.Element.DataListElement 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimDataListElement.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimDataListElement.#ctor(ExportIO.Export.Element.DataListElement)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimDataListElement.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimDataListElement.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimDataListElement.Bind(ExportIO.Export.Element.IEntityGetter{ExportIO.Export.Entity.ListSource})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimDataListElement.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimDataListElement.ConstructorXmlElementProductRuleElement">
            <summary>设置 DataListElement.DataListElement(XmlElement data, ProductRuleElement productRuleElement) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimDataListElement.CreateEntity">
            <summary>设置 DataListElement.CreateEntity() 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Element.Fakes.ShimDataListElement.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimDataListElement.AllInstances.CreateEntity">
            <summary>设置 DataListElement.CreateEntity() 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Element.Fakes.ShimDynamicAreaElement">
            <summary>ExportIO.Export.Element.DynamicAreaElement 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimDynamicAreaElement.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimDynamicAreaElement.#ctor(ExportIO.Export.Element.DynamicAreaElement)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimDynamicAreaElement.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimDynamicAreaElement.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimDynamicAreaElement.Bind(ExportIO.Export.Element.IProductRuleGetter)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimDynamicAreaElement.Bind(ExportIO.Export.Element.IEntityGetter{ExportIO.Export.Entity.DynamicArea})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimDynamicAreaElement.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimDynamicAreaElement.ConstructorXmlElementSheetElement">
            <summary>设置 DynamicAreaElement.DynamicAreaElement(XmlElement data, SheetElement sheetElement) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimDynamicAreaElement.CreateEntity">
            <summary>设置 DynamicAreaElement.CreateEntity() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimDynamicAreaElement.CurrentEntityGet">
            <summary>设置 DynamicAreaElement.get_CurrentEntity() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimDynamicAreaElement.ProductRuleElementGet">
            <summary>设置 DynamicAreaElement.get_ProductRuleElement() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimDynamicAreaElement.parseCellXmlNodeList">
            <summary>设置 DynamicAreaElement.parseCell(XmlNodeList nodes) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimDynamicAreaElement.parseTableXmlNodeList">
            <summary>设置 DynamicAreaElement.parseTable(XmlNodeList nodes) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Element.Fakes.ShimDynamicAreaElement.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimDynamicAreaElement.AllInstances.CreateEntity">
            <summary>设置 DynamicAreaElement.CreateEntity() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimDynamicAreaElement.AllInstances.CurrentEntityGet">
            <summary>设置 DynamicAreaElement.get_CurrentEntity() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimDynamicAreaElement.AllInstances.ProductRuleElementGet">
            <summary>设置 DynamicAreaElement.get_ProductRuleElement() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimDynamicAreaElement.AllInstances.parseCellXmlNodeList">
            <summary>设置 DynamicAreaElement.parseCell(XmlNodeList nodes) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimDynamicAreaElement.AllInstances.parseTableXmlNodeList">
            <summary>设置 DynamicAreaElement.parseTable(XmlNodeList nodes) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Element.Fakes.ShimElement`1">
            <summary>ExportIO.Export.Element.Element`1 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimElement`1.#ctor(ExportIO.Export.Element.Element{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimElement`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimElement`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimElement`1.Bind(ExportIO.Export.Element.IEntityGetter{`0})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimElement`1.parseSubElementOf2XmlNodeList``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Xml.XmlNodeList,System.Collections.Generic.List{``1}})">
            <summary>设置 Element`1.parseSubElement(XmlNodeList nodes) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimElement`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimElement`1.Constructor">
            <summary>设置 Element`1.Element`1() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimElement`1.ElementNameGet">
            <summary>设置 Element`1.get_ElementName() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimElement`1.EntityGet">
            <summary>设置 Element`1.get_Entity() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimElement`1.GetEntity">
            <summary>设置 Element`1.GetEntity() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimElement`1.OriginalEntityGet">
            <summary>设置 Element`1.get_OriginalEntity() 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Element.Fakes.ShimElement`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimElement`1.AllInstances.parseSubElementOf2XmlNodeList``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{ExportIO.Export.Element.Element{`0},System.Xml.XmlNodeList,System.Collections.Generic.List{``1}})">
            <summary>设置 Element`1.parseSubElement(XmlNodeList nodes) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimElement`1.AllInstances.ElementNameGet">
            <summary>设置 Element`1.get_ElementName() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimElement`1.AllInstances.EntityGet">
            <summary>设置 Element`1.get_Entity() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimElement`1.AllInstances.GetEntity">
            <summary>设置 Element`1.GetEntity() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimElement`1.AllInstances.OriginalEntityGet">
            <summary>设置 Element`1.get_OriginalEntity() 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Element.Fakes.ShimExportConfigElement">
            <summary>ExportIO.Export.Element.ExportConfigElement 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimExportConfigElement.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimExportConfigElement.#ctor(ExportIO.Export.Element.ExportConfigElement)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimExportConfigElement.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimExportConfigElement.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimExportConfigElement.Bind(ExportIO.Export.Element.IEntityGetter{ExportIO.Export.Entity.ExportConfig})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimExportConfigElement.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimExportConfigElement.Constructor">
            <summary>设置 ExportConfigElement.ExportConfigElement() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimExportConfigElement.CreateEntity">
            <summary>设置 ExportConfigElement.CreateEntity() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimExportConfigElement.GetRulesStringBoolean">
            <summary>设置 ExportConfigElement.GetRules(String name, Boolean createNew) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimExportConfigElement.LoadStringStringBoolean">
            <summary>设置 ExportConfigElement.Load(String filename, String xsdfile, Boolean parseErrorExit) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimExportConfigElement.LoadXmlReaderStringBoolean">
            <summary>设置 ExportConfigElement.Load(XmlReader xmlReader, String xsdfile, Boolean parseErrorExit) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimExportConfigElement.LoadXmlStringStringBoolean">
            <summary>设置 ExportConfigElement.LoadXml(String xml, String xsdfile, Boolean parseErrorExit) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimExportConfigElement.ProductRulesGet">
            <summary>设置 ExportConfigElement.get_ProductRules() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimExportConfigElement.ProductRulesSetDictionaryOfStringProductRuleElement">
            <summary>设置 ExportConfigElement.set_ProductRules(Dictionary`2&lt;String,ProductRuleElement&gt; value) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimExportConfigElement.ValidatorGet">
            <summary>设置 ExportConfigElement.get_Validator() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimExportConfigElement.ValidatorSetXmlValidator">
            <summary>设置 ExportConfigElement.set_Validator(XmlValidator value) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Element.Fakes.ShimExportConfigElement.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimExportConfigElement.AllInstances.CreateEntity">
            <summary>设置 ExportConfigElement.CreateEntity() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimExportConfigElement.AllInstances.GetRulesStringBoolean">
            <summary>设置 ExportConfigElement.GetRules(String name, Boolean createNew) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimExportConfigElement.AllInstances.LoadStringStringBoolean">
            <summary>设置 ExportConfigElement.Load(String filename, String xsdfile, Boolean parseErrorExit) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimExportConfigElement.AllInstances.LoadXmlReaderStringBoolean">
            <summary>设置 ExportConfigElement.Load(XmlReader xmlReader, String xsdfile, Boolean parseErrorExit) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimExportConfigElement.AllInstances.LoadXmlStringStringBoolean">
            <summary>设置 ExportConfigElement.LoadXml(String xml, String xsdfile, Boolean parseErrorExit) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimExportConfigElement.AllInstances.ProductRulesGet">
            <summary>设置 ExportConfigElement.get_ProductRules() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimExportConfigElement.AllInstances.ProductRulesSetDictionaryOfStringProductRuleElement">
            <summary>设置 ExportConfigElement.set_ProductRules(Dictionary`2&lt;String,ProductRuleElement&gt; value) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimExportConfigElement.AllInstances.ValidatorGet">
            <summary>设置 ExportConfigElement.get_Validator() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimExportConfigElement.AllInstances.ValidatorSetXmlValidator">
            <summary>设置 ExportConfigElement.set_Validator(XmlValidator value) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Element.Fakes.ShimFieldElement">
            <summary>ExportIO.Export.Element.FieldElement 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimFieldElement.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimFieldElement.#ctor(ExportIO.Export.Element.FieldElement)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimFieldElement.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimFieldElement.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimFieldElement.Bind(ExportIO.Export.Element.IEntityGetter{ExportIO.Export.Entity.Field})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimFieldElement.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimFieldElement.ConstructorXmlElementTableElement">
            <summary>设置 FieldElement.FieldElement(XmlElement data, TableElement tableElement) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimFieldElement.CreateEntity">
            <summary>设置 FieldElement.CreateEntity() 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Element.Fakes.ShimFieldElement.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimFieldElement.AllInstances.CreateEntity">
            <summary>设置 FieldElement.CreateEntity() 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Element.Fakes.ShimParseErrorException">
            <summary>ExportIO.Export.Element.ParseErrorException 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimParseErrorException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimParseErrorException.#ctor(ExportIO.Export.Element.ParseErrorException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimParseErrorException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimParseErrorException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimParseErrorException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimParseErrorException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimParseErrorException.Constructor">
            <summary>设置 ParseErrorException.ParseErrorException() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimParseErrorException.ConstructorString">
            <summary>设置 ParseErrorException.ParseErrorException(String message) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Element.Fakes.ShimParseErrorException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Element.Fakes.ShimProductRuleElement">
            <summary>ExportIO.Export.Element.ProductRuleElement 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimProductRuleElement.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimProductRuleElement.#ctor(ExportIO.Export.Element.ProductRuleElement)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimProductRuleElement.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimProductRuleElement.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimProductRuleElement.Bind(ExportIO.Export.Element.IEntityGetter{ExportIO.Export.Entity.ProductRule})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimProductRuleElement.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimProductRuleElement.ConstructorXmlElementExportConfigElementXmlValidator">
            <summary>设置 ProductRuleElement.ProductRuleElement(XmlElement data, ExportConfigElement configElement, XmlValidator validator) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimProductRuleElement.CreateEntity">
            <summary>设置 ProductRuleElement.CreateEntity() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimProductRuleElement.QuerySubNodesStringXmlElement">
            <summary>设置 ProductRuleElement.QuerySubNodes(String path, XmlElement data) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimProductRuleElement.parseDataListXmlNodeList">
            <summary>设置 ProductRuleElement.parseDataList(XmlNodeList nodes) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimProductRuleElement.parseSheetXmlNodeList">
            <summary>设置 ProductRuleElement.parseSheet(XmlNodeList nodes) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimProductRuleElement.parseSourceXmlNodeList">
            <summary>设置 ProductRuleElement.parseSource(XmlNodeList nodes) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Element.Fakes.ShimProductRuleElement.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimProductRuleElement.AllInstances.CreateEntity">
            <summary>设置 ProductRuleElement.CreateEntity() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimProductRuleElement.AllInstances.QuerySubNodesStringXmlElement">
            <summary>设置 ProductRuleElement.QuerySubNodes(String path, XmlElement data) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimProductRuleElement.AllInstances.parseDataListXmlNodeList">
            <summary>设置 ProductRuleElement.parseDataList(XmlNodeList nodes) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimProductRuleElement.AllInstances.parseSheetXmlNodeList">
            <summary>设置 ProductRuleElement.parseSheet(XmlNodeList nodes) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimProductRuleElement.AllInstances.parseSourceXmlNodeList">
            <summary>设置 ProductRuleElement.parseSource(XmlNodeList nodes) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Element.Fakes.ShimRegionElement">
            <summary>ExportIO.Export.Element.RegionElement 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimRegionElement.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimRegionElement.#ctor(ExportIO.Export.Element.RegionElement)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimRegionElement.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimRegionElement.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimRegionElement.Bind(ExportIO.Export.Element.IEntityGetter{ExportIO.Export.Entity.Region.Region})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimRegionElement.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimRegionElement.ConstructorXmlElementRegionTableElement">
            <summary>设置 RegionElement.RegionElement(XmlElement data, RegionTableElement regionTableElement) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimRegionElement.CreateEntity">
            <summary>设置 RegionElement.CreateEntity() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimRegionElement.parseRelationSourceStringProductRule">
            <summary>设置 RegionElement.parseRelation(Source source, String tmpStr, ProductRule prod) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimRegionElement.parseTreeSourceStringStringProductRule">
            <summary>设置 RegionElement.parseTreeSource(String source, String mapping, ProductRule prod) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Element.Fakes.ShimRegionElement.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimRegionElement.AllInstances.CreateEntity">
            <summary>设置 RegionElement.CreateEntity() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimRegionElement.AllInstances.parseRelationSourceStringProductRule">
            <summary>设置 RegionElement.parseRelation(Source source, String tmpStr, ProductRule prod) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimRegionElement.AllInstances.parseTreeSourceStringStringProductRule">
            <summary>设置 RegionElement.parseTreeSource(String source, String mapping, ProductRule prod) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Element.Fakes.ShimRegionTableElement">
            <summary>ExportIO.Export.Element.RegionTableElement 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimRegionTableElement.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimRegionTableElement.#ctor(ExportIO.Export.Element.RegionTableElement)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimRegionTableElement.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimRegionTableElement.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimRegionTableElement.Bind(ExportIO.Export.Element.IEntityGetter{ExportIO.Export.Entity.Region.RegionTable})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimRegionTableElement.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimRegionTableElement.ConstructorXmlElementSheetElement">
            <summary>设置 RegionTableElement.RegionTableElement(XmlElement data, SheetElement sheetElement) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimRegionTableElement.CreateEntity">
            <summary>设置 RegionTableElement.CreateEntity() 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Element.Fakes.ShimRegionTableElement.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimRegionTableElement.AllInstances.CreateEntity">
            <summary>设置 RegionTableElement.CreateEntity() 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Element.Fakes.ShimSheetElement">
            <summary>ExportIO.Export.Element.SheetElement 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimSheetElement.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimSheetElement.#ctor(ExportIO.Export.Element.SheetElement)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimSheetElement.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimSheetElement.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimSheetElement.Bind(ExportIO.Export.Element.IProductRuleGetter)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimSheetElement.Bind(ExportIO.Export.Element.IEntityGetter{ExportIO.Export.Entity.Sheet})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimSheetElement.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimSheetElement.ConstructorXmlElementProductRuleElement">
            <summary>设置 SheetElement.SheetElement(XmlElement data, ProductRuleElement productRuleElement) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimSheetElement.CreateEntity">
            <summary>设置 SheetElement.CreateEntity() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimSheetElement.CurrentEntityGet">
            <summary>设置 SheetElement.get_CurrentEntity() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimSheetElement.ProductRuleElementGet">
            <summary>设置 SheetElement.get_ProductRuleElement() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimSheetElement.parseCellXmlNodeList">
            <summary>设置 SheetElement.parseCell(XmlNodeList nodes) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimSheetElement.parseDynamicAreaXmlNodeList">
            <summary>设置 SheetElement.parseDynamicArea(XmlNodeList nodes) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimSheetElement.parseHeaderTableXmlNodeList">
            <summary>设置 SheetElement.parseHeaderTable(XmlNodeList nodes) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimSheetElement.parseTableXmlNodeList">
            <summary>设置 SheetElement.parseTable(XmlNodeList nodes) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Element.Fakes.ShimSheetElement.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimSheetElement.AllInstances.CreateEntity">
            <summary>设置 SheetElement.CreateEntity() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimSheetElement.AllInstances.CurrentEntityGet">
            <summary>设置 SheetElement.get_CurrentEntity() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimSheetElement.AllInstances.ProductRuleElementGet">
            <summary>设置 SheetElement.get_ProductRuleElement() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimSheetElement.AllInstances.parseCellXmlNodeList">
            <summary>设置 SheetElement.parseCell(XmlNodeList nodes) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimSheetElement.AllInstances.parseDynamicAreaXmlNodeList">
            <summary>设置 SheetElement.parseDynamicArea(XmlNodeList nodes) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimSheetElement.AllInstances.parseHeaderTableXmlNodeList">
            <summary>设置 SheetElement.parseHeaderTable(XmlNodeList nodes) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimSheetElement.AllInstances.parseTableXmlNodeList">
            <summary>设置 SheetElement.parseTable(XmlNodeList nodes) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Element.Fakes.ShimSourceElement">
            <summary>ExportIO.Export.Element.SourceElement 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimSourceElement.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimSourceElement.#ctor(ExportIO.Export.Element.SourceElement)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimSourceElement.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimSourceElement.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimSourceElement.Bind(ExportIO.Export.Element.IEntityGetter{ExportIO.Export.Entity.Source})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimSourceElement.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimSourceElement.ConstructorXmlElementProductRuleElement">
            <summary>设置 SourceElement.SourceElement(XmlElement data, ProductRuleElement productRuleElement) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimSourceElement.CreateEntity">
            <summary>设置 SourceElement.CreateEntity() 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Element.Fakes.ShimSourceElement.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimSourceElement.AllInstances.CreateEntity">
            <summary>设置 SourceElement.CreateEntity() 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Element.Fakes.ShimTableElement">
            <summary>ExportIO.Export.Element.TableElement 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimTableElement.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimTableElement.#ctor(ExportIO.Export.Element.TableElement)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimTableElement.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimTableElement.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimTableElement.Bind(ExportIO.Export.Element.IEntityGetter{ExportIO.Export.Entity.Table})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimTableElement.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimTableElement.ConstructorXmlElementIProductRuleGetter">
            <summary>设置 TableElement.TableElement(XmlElement data, IProductRuleGetter sheetElement) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimTableElement.CreateEntity">
            <summary>设置 TableElement.CreateEntity() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimTableElement.parseFieldXmlNodeList">
            <summary>设置 TableElement.parseField(XmlNodeList nodes) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimTableElement.parseRowNumXmlNodeList">
            <summary>设置 TableElement.parseRowNum(XmlNodeList nodes) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Element.Fakes.ShimTableElement.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimTableElement.AllInstances.CreateEntity">
            <summary>设置 TableElement.CreateEntity() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimTableElement.AllInstances.parseFieldXmlNodeList">
            <summary>设置 TableElement.parseField(XmlNodeList nodes) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimTableElement.AllInstances.parseRowNumXmlNodeList">
            <summary>设置 TableElement.parseRowNum(XmlNodeList nodes) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Element.Fakes.ShimXmlValidator">
            <summary>ExportIO.Export.Element.XmlValidator 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimXmlValidator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimXmlValidator.#ctor(ExportIO.Export.Element.XmlValidator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimXmlValidator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.ShimXmlValidator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimXmlValidator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimXmlValidator.ConstructorXmlDocumentStringBoolean">
            <summary>设置 XmlValidator.XmlValidator(XmlDocument xmlDoc, String xsdFile, Boolean parseErrorExit) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimXmlValidator.ParseErrorExitGet">
            <summary>设置 XmlValidator.get_ParseErrorExit() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimXmlValidator.ParseErrorExitSetBoolean">
            <summary>设置 XmlValidator.set_ParseErrorExit(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimXmlValidator.QuerySubNodesStringXmlElement">
            <summary>设置 XmlValidator.QuerySubNodes(String query, XmlElement element) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimXmlValidator.SchemaTargetNamespace">
            <summary>设置 XmlValidator.SchemaTargetNamespace() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimXmlValidator.SchemaUriGet">
            <summary>设置 XmlValidator.get_SchemaUri() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimXmlValidator.SchemaUriSetString">
            <summary>设置 XmlValidator.set_SchemaUri(String value) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimXmlValidator.SchemaUsedGet">
            <summary>设置 XmlValidator.get_SchemaUsed() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimXmlValidator.ValidateXml">
            <summary>设置 XmlValidator.ValidateXml() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimXmlValidator.checkSchema">
            <summary>设置 XmlValidator.checkSchema() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimXmlValidator.getXPathStringString">
            <summary>设置 XmlValidator.getXPath(String query, String prefix) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimXmlValidator.test">
            <summary>设置 XmlValidator.test() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimXmlValidator.test2">
            <summary>设置 XmlValidator.test2() 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Element.Fakes.ShimXmlValidator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimXmlValidator.AllInstances.ParseErrorExitGet">
            <summary>设置 XmlValidator.get_ParseErrorExit() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimXmlValidator.AllInstances.ParseErrorExitSetBoolean">
            <summary>设置 XmlValidator.set_ParseErrorExit(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimXmlValidator.AllInstances.QuerySubNodesStringXmlElement">
            <summary>设置 XmlValidator.QuerySubNodes(String query, XmlElement element) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimXmlValidator.AllInstances.SchemaTargetNamespace">
            <summary>设置 XmlValidator.SchemaTargetNamespace() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimXmlValidator.AllInstances.SchemaUriGet">
            <summary>设置 XmlValidator.get_SchemaUri() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimXmlValidator.AllInstances.SchemaUriSetString">
            <summary>设置 XmlValidator.set_SchemaUri(String value) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimXmlValidator.AllInstances.SchemaUsedGet">
            <summary>设置 XmlValidator.get_SchemaUsed() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimXmlValidator.AllInstances.ValidateXml">
            <summary>设置 XmlValidator.ValidateXml() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.ShimXmlValidator.AllInstances.checkSchema">
            <summary>设置 XmlValidator.checkSchema() 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Element.Fakes.StubBaseElement">
            <summary>ExportIO.Export.Element.BaseElement 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubBaseElement.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubBaseElement.ElementNameGet">
            <summary>设置 BaseElement.get_ElementName() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubBaseElement.GetEntity">
            <summary>设置 BaseElement.GetEntity() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubBaseElement.GetEntity01">
            <summary>设置 BaseElement.GetEntity() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubBaseElement.InitializeStub">
            <summary>初始化 type StubBaseElement 的新实例</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubBaseElement.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubBaseElement.ElementName">
            <summary>设置 BaseElement.get_ElementName() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubBaseElement.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubBaseElement.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Element.Fakes.StubCellElement">
            <summary>ExportIO.Export.Element.CellElement 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubCellElement.#ctor(System.Xml.XmlElement,ExportIO.Export.Element.IProductRuleGetter)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubCellElement.CreateEntity">
            <summary>设置 CellElement.CreateEntity() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubCellElement.CreateEntity01">
            <summary>设置 CellElement.CreateEntity() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubCellElement.ElementNameGet">
            <summary>设置 Element`1.get_ElementName() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubCellElement.GetEntity">
            <summary>设置 Element`1.GetEntity() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubCellElement.GetEntity01">
            <summary>设置 Element`1.GetEntity() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubCellElement.InitializeStub">
            <summary>初始化 type StubCellElement 的新实例</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubCellElement.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubCellElement.ElementName">
            <summary>设置 Element`1.get_ElementName() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubCellElement.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubCellElement.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Element.Fakes.StubDataListElement">
            <summary>ExportIO.Export.Element.DataListElement 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubDataListElement.#ctor(System.Xml.XmlElement,ExportIO.Export.Element.ProductRuleElement)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubDataListElement.CreateEntity">
            <summary>设置 DataListElement.CreateEntity() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubDataListElement.CreateEntity01">
            <summary>设置 DataListElement.CreateEntity() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubDataListElement.ElementNameGet">
            <summary>设置 Element`1.get_ElementName() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubDataListElement.GetEntity">
            <summary>设置 Element`1.GetEntity() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubDataListElement.GetEntity01">
            <summary>设置 Element`1.GetEntity() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubDataListElement.InitializeStub">
            <summary>初始化 type StubDataListElement 的新实例</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubDataListElement.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubDataListElement.ElementName">
            <summary>设置 Element`1.get_ElementName() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubDataListElement.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubDataListElement.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Element.Fakes.StubDynamicAreaElement">
            <summary>ExportIO.Export.Element.DynamicAreaElement 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubDynamicAreaElement.#ctor(System.Xml.XmlElement,ExportIO.Export.Element.SheetElement)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubDynamicAreaElement.CreateEntity">
            <summary>设置 DynamicAreaElement.CreateEntity() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubDynamicAreaElement.CreateEntity01">
            <summary>设置 DynamicAreaElement.CreateEntity() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubDynamicAreaElement.ElementNameGet">
            <summary>设置 Element`1.get_ElementName() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubDynamicAreaElement.GetEntity">
            <summary>设置 Element`1.GetEntity() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubDynamicAreaElement.GetEntity01">
            <summary>设置 Element`1.GetEntity() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubDynamicAreaElement.InitializeStub">
            <summary>初始化 type StubDynamicAreaElement 的新实例</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubDynamicAreaElement.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubDynamicAreaElement.ElementName">
            <summary>设置 Element`1.get_ElementName() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubDynamicAreaElement.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubDynamicAreaElement.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Element.Fakes.StubElement`1">
            <summary>ExportIO.Export.Element.Element`1 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubElement`1.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubElement`1.CreateEntity">
            <summary>设置 Element`1.CreateEntity() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubElement`1.CreateEntity01">
            <summary>设置 Element`1.CreateEntity() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubElement`1.ElementNameGet">
            <summary>设置 Element`1.get_ElementName() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubElement`1.GetEntity">
            <summary>设置 Element`1.GetEntity() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubElement`1.GetEntity01">
            <summary>设置 Element`1.GetEntity() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubElement`1.InitializeStub">
            <summary>初始化 type StubElement 的新实例</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubElement`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubElement`1.ElementName">
            <summary>设置 Element`1.get_ElementName() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubElement`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubElement`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Element.Fakes.StubExportConfigElement">
            <summary>ExportIO.Export.Element.ExportConfigElement 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubExportConfigElement.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubExportConfigElement.CreateEntity">
            <summary>设置 ExportConfigElement.CreateEntity() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubExportConfigElement.CreateEntity01">
            <summary>设置 ExportConfigElement.CreateEntity() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubExportConfigElement.ElementNameGet">
            <summary>设置 Element`1.get_ElementName() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubExportConfigElement.GetEntity">
            <summary>设置 Element`1.GetEntity() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubExportConfigElement.GetEntity01">
            <summary>设置 Element`1.GetEntity() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubExportConfigElement.InitializeStub">
            <summary>初始化 type StubExportConfigElement 的新实例</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubExportConfigElement.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubExportConfigElement.ElementName">
            <summary>设置 Element`1.get_ElementName() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubExportConfigElement.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubExportConfigElement.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Element.Fakes.StubFieldElement">
            <summary>ExportIO.Export.Element.FieldElement 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubFieldElement.#ctor(System.Xml.XmlElement,ExportIO.Export.Element.TableElement)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubFieldElement.CreateEntity">
            <summary>设置 FieldElement.CreateEntity() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubFieldElement.CreateEntity01">
            <summary>设置 FieldElement.CreateEntity() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubFieldElement.ElementNameGet">
            <summary>设置 Element`1.get_ElementName() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubFieldElement.GetEntity">
            <summary>设置 Element`1.GetEntity() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubFieldElement.GetEntity01">
            <summary>设置 Element`1.GetEntity() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubFieldElement.InitializeStub">
            <summary>初始化 type StubFieldElement 的新实例</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubFieldElement.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubFieldElement.ElementName">
            <summary>设置 Element`1.get_ElementName() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubFieldElement.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubFieldElement.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Element.Fakes.StubIEntityGetter`1">
            <summary>ExportIO.Export.Element.IEntityGetter`1 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubIEntityGetter`1.#ctor">
            <summary>初始化 type StubIEntityGetter 的新实例</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubIEntityGetter`1.EntityGet">
            <summary>设置 IEntityGetter`1.get_Entity() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubIEntityGetter`1.OriginalEntityGet">
            <summary>设置 IEntityGetter`1.get_OriginalEntity() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubIEntityGetter`1.ec::ExportIO#Export#Element#IEntityGetter{T}#Entity">
            <summary>设置 IEntityGetter`1.get_Entity() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubIEntityGetter`1.ec::ExportIO#Export#Element#IEntityGetter{T}#OriginalEntity">
            <summary>设置 IEntityGetter`1.get_OriginalEntity() 的 stub</summary>
        </member>
        <member name="T:ExportIO.Export.Element.Fakes.StubIProductRuleGetter">
            <summary>ExportIO.Export.Element.IProductRuleGetter 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubIProductRuleGetter.#ctor">
            <summary>初始化 type StubIProductRuleGetter 的新实例</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubIProductRuleGetter.CurrentEntityGet">
            <summary>设置 IProductRuleGetter.get_CurrentEntity() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubIProductRuleGetter.ProductRuleElementGet">
            <summary>设置 IProductRuleGetter.get_ProductRuleElement() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubIProductRuleGetter.ec::ExportIO#Export#Element#IProductRuleGetter#CurrentEntity">
            <summary>设置 IProductRuleGetter.get_CurrentEntity() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubIProductRuleGetter.ec::ExportIO#Export#Element#IProductRuleGetter#ProductRuleElement">
            <summary>设置 IProductRuleGetter.get_ProductRuleElement() 的 stub</summary>
        </member>
        <member name="T:ExportIO.Export.Element.Fakes.StubIValidator">
            <summary>ExportIO.Export.Element.IValidator 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubIValidator.#ctor">
            <summary>初始化 type StubIValidator 的新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubIValidator.ec::ExportIO#Export#Element#IValidator#Validate">
            <summary>设置 IValidator.Validate() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubIValidator.Validate">
            <summary>设置 IValidator.Validate() 的 stub</summary>
        </member>
        <member name="T:ExportIO.Export.Element.Fakes.StubIXmlSerialize">
            <summary>ExportIO.Export.Element.IXmlSerialize 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubIXmlSerialize.#ctor">
            <summary>初始化 type StubIXmlSerialize 的新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubIXmlSerialize.ec::ExportIO#Export#Element#IXmlSerialize#ToString(System.String)">
            <summary>设置 IXmlSerialize.ToString(String param) 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubIXmlSerialize.ToStringString">
            <summary>设置 IXmlSerialize.ToString(String param) 的 stub</summary>
        </member>
        <member name="T:ExportIO.Export.Element.Fakes.StubParseErrorException">
            <summary>ExportIO.Export.Element.ParseErrorException 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubParseErrorException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubParseErrorException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubParseErrorException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubParseErrorException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubParseErrorException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubParseErrorException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubParseErrorException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubParseErrorException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubParseErrorException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubParseErrorException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubParseErrorException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubParseErrorException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubParseErrorException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubParseErrorException.InitializeStub">
            <summary>初始化 type StubParseErrorException 的新实例</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubParseErrorException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubParseErrorException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubParseErrorException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubParseErrorException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubParseErrorException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubParseErrorException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubParseErrorException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubParseErrorException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubParseErrorException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubParseErrorException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubParseErrorException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubParseErrorException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubParseErrorException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubParseErrorException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:ExportIO.Export.Element.Fakes.StubProductRuleElement">
            <summary>ExportIO.Export.Element.ProductRuleElement 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubProductRuleElement.#ctor(System.Xml.XmlElement,ExportIO.Export.Element.ExportConfigElement,ExportIO.Export.Element.XmlValidator)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubProductRuleElement.CreateEntity">
            <summary>设置 ProductRuleElement.CreateEntity() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubProductRuleElement.CreateEntity01">
            <summary>设置 ProductRuleElement.CreateEntity() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubProductRuleElement.ElementNameGet">
            <summary>设置 Element`1.get_ElementName() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubProductRuleElement.GetEntity">
            <summary>设置 Element`1.GetEntity() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubProductRuleElement.GetEntity01">
            <summary>设置 Element`1.GetEntity() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubProductRuleElement.InitializeStub">
            <summary>初始化 type StubProductRuleElement 的新实例</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubProductRuleElement.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubProductRuleElement.ElementName">
            <summary>设置 Element`1.get_ElementName() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubProductRuleElement.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubProductRuleElement.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Element.Fakes.StubRegionElement">
            <summary>ExportIO.Export.Element.RegionElement 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubRegionElement.#ctor(System.Xml.XmlElement,ExportIO.Export.Element.RegionTableElement)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubRegionElement.CreateEntity">
            <summary>设置 RegionElement.CreateEntity() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubRegionElement.CreateEntity01">
            <summary>设置 RegionElement.CreateEntity() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubRegionElement.ElementNameGet">
            <summary>设置 Element`1.get_ElementName() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubRegionElement.GetEntity">
            <summary>设置 Element`1.GetEntity() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubRegionElement.GetEntity01">
            <summary>设置 Element`1.GetEntity() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubRegionElement.InitializeStub">
            <summary>初始化 type StubRegionElement 的新实例</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubRegionElement.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubRegionElement.ElementName">
            <summary>设置 Element`1.get_ElementName() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubRegionElement.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubRegionElement.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Element.Fakes.StubRegionTableElement">
            <summary>ExportIO.Export.Element.RegionTableElement 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubRegionTableElement.#ctor(System.Xml.XmlElement,ExportIO.Export.Element.SheetElement)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubRegionTableElement.CreateEntity">
            <summary>设置 RegionTableElement.CreateEntity() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubRegionTableElement.CreateEntity01">
            <summary>设置 RegionTableElement.CreateEntity() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubRegionTableElement.ElementNameGet">
            <summary>设置 Element`1.get_ElementName() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubRegionTableElement.GetEntity">
            <summary>设置 Element`1.GetEntity() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubRegionTableElement.GetEntity01">
            <summary>设置 Element`1.GetEntity() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubRegionTableElement.InitializeStub">
            <summary>初始化 type StubRegionTableElement 的新实例</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubRegionTableElement.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubRegionTableElement.ElementName">
            <summary>设置 Element`1.get_ElementName() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubRegionTableElement.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubRegionTableElement.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Element.Fakes.StubSheetElement">
            <summary>ExportIO.Export.Element.SheetElement 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubSheetElement.#ctor(System.Xml.XmlElement,ExportIO.Export.Element.ProductRuleElement)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubSheetElement.CreateEntity">
            <summary>设置 SheetElement.CreateEntity() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubSheetElement.CreateEntity01">
            <summary>设置 SheetElement.CreateEntity() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubSheetElement.ElementNameGet">
            <summary>设置 Element`1.get_ElementName() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubSheetElement.GetEntity">
            <summary>设置 Element`1.GetEntity() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubSheetElement.GetEntity01">
            <summary>设置 Element`1.GetEntity() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubSheetElement.InitializeStub">
            <summary>初始化 type StubSheetElement 的新实例</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubSheetElement.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubSheetElement.ElementName">
            <summary>设置 Element`1.get_ElementName() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubSheetElement.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubSheetElement.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Element.Fakes.StubSourceElement">
            <summary>ExportIO.Export.Element.SourceElement 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubSourceElement.#ctor(System.Xml.XmlElement,ExportIO.Export.Element.ProductRuleElement)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubSourceElement.CreateEntity">
            <summary>设置 SourceElement.CreateEntity() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubSourceElement.CreateEntity01">
            <summary>设置 SourceElement.CreateEntity() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubSourceElement.ElementNameGet">
            <summary>设置 Element`1.get_ElementName() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubSourceElement.GetEntity">
            <summary>设置 Element`1.GetEntity() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubSourceElement.GetEntity01">
            <summary>设置 Element`1.GetEntity() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubSourceElement.InitializeStub">
            <summary>初始化 type StubSourceElement 的新实例</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubSourceElement.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubSourceElement.ElementName">
            <summary>设置 Element`1.get_ElementName() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubSourceElement.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubSourceElement.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Element.Fakes.StubTableElement">
            <summary>ExportIO.Export.Element.TableElement 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubTableElement.#ctor(System.Xml.XmlElement,ExportIO.Export.Element.IProductRuleGetter)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubTableElement.CreateEntity">
            <summary>设置 TableElement.CreateEntity() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubTableElement.CreateEntity01">
            <summary>设置 TableElement.CreateEntity() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubTableElement.ElementNameGet">
            <summary>设置 Element`1.get_ElementName() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubTableElement.GetEntity">
            <summary>设置 Element`1.GetEntity() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Element.Fakes.StubTableElement.GetEntity01">
            <summary>设置 Element`1.GetEntity() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubTableElement.InitializeStub">
            <summary>初始化 type StubTableElement 的新实例</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubTableElement.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubTableElement.ElementName">
            <summary>设置 Element`1.get_ElementName() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubTableElement.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubTableElement.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Element.Fakes.StubXmlValidator">
            <summary>ExportIO.Export.Element.XmlValidator 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubXmlValidator.#ctor(System.Xml.XmlDocument,System.String,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Element.Fakes.StubXmlValidator.InitializeStub">
            <summary>初始化 type StubXmlValidator 的新实例</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubXmlValidator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubXmlValidator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Element.Fakes.StubXmlValidator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.ShimBaseContainer">
            <summary>ExportIO.Export.Entity.BaseContainer 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimBaseContainer.#ctor(ExportIO.Export.Entity.BaseContainer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimBaseContainer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimBaseContainer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimBaseContainer.Bind(ExportIO.Export.Entity.IRuleEntity)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimBaseContainer.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimBaseContainer.AllIncreasedBeforeGet">
            <summary>设置 BaseContainer.get_AllIncreasedBefore() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimBaseContainer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimBaseContainer.ColIndexGet">
            <summary>设置 BaseContainer.get_ColIndex() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimBaseContainer.ConstructorProductRuleBaseContainerLocation">
            <summary>设置 BaseContainer.BaseContainer(ProductRule productRule, BaseContainer container, Location location) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimBaseContainer.CopyFillGet">
            <summary>设置 BaseContainer.get_CopyFill() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimBaseContainer.CopyFillSetBoolean">
            <summary>设置 BaseContainer.set_CopyFill(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimBaseContainer.IncreasedBeforeBaseContainer">
            <summary>设置 BaseContainer.IncreasedBefore(BaseContainer subObject) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimBaseContainer.IncreasedRowsGet">
            <summary>设置 BaseContainer.get_IncreasedRows() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimBaseContainer.LocationGet">
            <summary>设置 BaseContainer.get_Location() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimBaseContainer.LocationSetLocation">
            <summary>设置 BaseContainer.set_Location(Location value) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimBaseContainer.ProductRuleGet">
            <summary>设置 BaseContainer.get_ProductRule() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimBaseContainer.ProductRuleSetProductRule">
            <summary>设置 BaseContainer.set_ProductRule(ProductRule value) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimBaseContainer.RowIndexGet">
            <summary>设置 BaseContainer.get_RowIndex() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimBaseContainer.SetContainerBaseContainer">
            <summary>设置 BaseContainer.SetContainer(BaseContainer container) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimBaseContainer.TempleteRowsGet">
            <summary>设置 BaseContainer.get_TempleteRows() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimBaseContainer.TempleteRowsSetInt32">
            <summary>设置 BaseContainer.set_TempleteRows(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.ShimBaseContainer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimBaseContainer.AllInstances.AllIncreasedBeforeGet">
            <summary>设置 BaseContainer.get_AllIncreasedBefore() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimBaseContainer.AllInstances.ColIndexGet">
            <summary>设置 BaseContainer.get_ColIndex() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimBaseContainer.AllInstances.CopyFillGet">
            <summary>设置 BaseContainer.get_CopyFill() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimBaseContainer.AllInstances.CopyFillSetBoolean">
            <summary>设置 BaseContainer.set_CopyFill(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimBaseContainer.AllInstances.IncreasedBeforeBaseContainer">
            <summary>设置 BaseContainer.IncreasedBefore(BaseContainer subObject) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimBaseContainer.AllInstances.IncreasedRowsGet">
            <summary>设置 BaseContainer.get_IncreasedRows() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimBaseContainer.AllInstances.LocationGet">
            <summary>设置 BaseContainer.get_Location() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimBaseContainer.AllInstances.LocationSetLocation">
            <summary>设置 BaseContainer.set_Location(Location value) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimBaseContainer.AllInstances.ProductRuleGet">
            <summary>设置 BaseContainer.get_ProductRule() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimBaseContainer.AllInstances.ProductRuleSetProductRule">
            <summary>设置 BaseContainer.set_ProductRule(ProductRule value) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimBaseContainer.AllInstances.RowIndexGet">
            <summary>设置 BaseContainer.get_RowIndex() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimBaseContainer.AllInstances.SetContainerBaseContainer">
            <summary>设置 BaseContainer.SetContainer(BaseContainer container) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimBaseContainer.AllInstances.TempleteRowsGet">
            <summary>设置 BaseContainer.get_TempleteRows() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimBaseContainer.AllInstances.TempleteRowsSetInt32">
            <summary>设置 BaseContainer.set_TempleteRows(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.ShimBaseSource">
            <summary>ExportIO.Export.Entity.BaseSource 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimBaseSource.#ctor(ExportIO.Export.Entity.BaseSource)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimBaseSource.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimBaseSource.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimBaseSource.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimBaseSource.Constructor">
            <summary>设置 BaseSource.BaseSource() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimBaseSource.NameGet">
            <summary>设置 BaseSource.get_Name() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimBaseSource.NameSetString">
            <summary>设置 BaseSource.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimBaseSource.TableGet">
            <summary>设置 BaseSource.get_Table() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimBaseSource.TableSetDataTable">
            <summary>设置 BaseSource.set_Table(DataTable value) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.ShimBaseSource.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimBaseSource.AllInstances.NameGet">
            <summary>设置 BaseSource.get_Name() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimBaseSource.AllInstances.NameSetString">
            <summary>设置 BaseSource.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimBaseSource.AllInstances.TableGet">
            <summary>设置 BaseSource.get_Table() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimBaseSource.AllInstances.TableSetDataTable">
            <summary>设置 BaseSource.set_Table(DataTable value) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.ShimCell">
            <summary>ExportIO.Export.Entity.Cell 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimCell.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimCell.#ctor(ExportIO.Export.Entity.Cell)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimCell.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimCell.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimCell.Bind(ExportIO.Export.Entity.IRuleEntity)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimCell.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimCell.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimCell.Clone">
            <summary>设置 Cell.Clone() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimCell.ColCountGet">
            <summary>设置 Cell.get_ColCount() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimCell.ConstructorProductRuleBaseContainerLocation">
            <summary>设置 Cell.Cell(ProductRule productRule, BaseContainer container, Location location) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimCell.CopyFillGet">
            <summary>设置 Cell.get_CopyFill() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimCell.GetNodes">
            <summary>设置 Cell.GetNodes() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimCell.GetValue">
            <summary>设置 Cell.GetValue() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimCell.RowCountGet">
            <summary>设置 Cell.get_RowCount() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimCell.ToString">
            <summary>设置 Cell.ToString() 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.ShimCell.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimCell.AllInstances.Clone">
            <summary>设置 Cell.Clone() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimCell.AllInstances.ColCountGet">
            <summary>设置 Cell.get_ColCount() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimCell.AllInstances.CopyFillGet">
            <summary>设置 Cell.get_CopyFill() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimCell.AllInstances.GetNodes">
            <summary>设置 Cell.GetNodes() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimCell.AllInstances.GetValue">
            <summary>设置 Cell.GetValue() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimCell.AllInstances.RowCountGet">
            <summary>设置 Cell.get_RowCount() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimCell.AllInstances.ToString01">
            <summary>设置 Cell.ToString() 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.ShimDynamicArea">
            <summary>ExportIO.Export.Entity.DynamicArea 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimDynamicArea.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimDynamicArea.#ctor(ExportIO.Export.Entity.DynamicArea)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimDynamicArea.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimDynamicArea.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimDynamicArea.Bind(ExportIO.Export.Entity.IRuleEntity)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimDynamicArea.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicArea.AddCellsIEnumerableOfCell">
            <summary>设置 DynamicArea.AddCells(IEnumerable`1&lt;Cell&gt; cells) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicArea.AddTablesIEnumerableOfTable">
            <summary>设置 DynamicArea.AddTables(IEnumerable`1&lt;Table&gt; tables) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicArea.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicArea.CellsGet">
            <summary>设置 DynamicArea.get_Cells() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicArea.Clone">
            <summary>设置 DynamicArea.Clone() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicArea.ColCountGet">
            <summary>设置 DynamicArea.get_ColCount() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicArea.ConstructorProductRuleBaseContainerLocation">
            <summary>设置 DynamicArea.DynamicArea(ProductRule productRule, BaseContainer container, Location location) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicArea.CopyFillGet">
            <summary>设置 DynamicArea.get_CopyFill() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicArea.CountGet">
            <summary>设置 DynamicArea.get_Count() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicArea.GetAllContainersBoolean">
            <summary>设置 DynamicArea.GetAllContainers(Boolean reset) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicArea.GetNodes">
            <summary>设置 DynamicArea.GetNodes() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicArea.IncreasedBeforeBaseContainer">
            <summary>设置 DynamicArea.IncreasedBefore(BaseContainer subObject) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicArea.IncreasedRowsGet">
            <summary>设置 DynamicArea.get_IncreasedRows() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicArea.RowCountGet">
            <summary>设置 DynamicArea.get_RowCount() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicArea.SourceSetSource">
            <summary>设置 DynamicArea.set_Source(Source value) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicArea.TablesGet">
            <summary>设置 DynamicArea.get_Tables() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicArea.TempleteRowsGet">
            <summary>设置 DynamicArea.get_TempleteRows() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicArea.ToString">
            <summary>设置 DynamicArea.ToString() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicArea._AddTablesb__8TableTable">
            <summary>设置 DynamicArea.&lt;AddTables&gt;b__8(Table t1, Table t2) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicArea._IncreasedBeforeb__bBaseContainer">
            <summary>设置 DynamicArea.&lt;IncreasedBefore&gt;b__b(BaseContainer p) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicArea._ctorb__0Int32">
            <summary>设置 DynamicArea.&lt;.ctor&gt;b__0(Int32 p) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicArea._ctorb__1Int32">
            <summary>设置 DynamicArea.&lt;.ctor&gt;b__1(Int32 p) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicArea._get_IncreasedRowsb__4BaseContainer">
            <summary>设置 DynamicArea.&lt;get_IncreasedRows&gt;b__4(BaseContainer p) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicArea._get_IncreasedRowsb__5BaseContainer">
            <summary>设置 DynamicArea.&lt;get_IncreasedRows&gt;b__5(BaseContainer p) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.ShimDynamicArea.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicArea.AllInstances.AddCellsIEnumerableOfCell">
            <summary>设置 DynamicArea.AddCells(IEnumerable`1&lt;Cell&gt; cells) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicArea.AllInstances.AddTablesIEnumerableOfTable">
            <summary>设置 DynamicArea.AddTables(IEnumerable`1&lt;Table&gt; tables) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicArea.AllInstances.CellsGet">
            <summary>设置 DynamicArea.get_Cells() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicArea.AllInstances.Clone">
            <summary>设置 DynamicArea.Clone() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicArea.AllInstances.ColCountGet">
            <summary>设置 DynamicArea.get_ColCount() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicArea.AllInstances.CopyFillGet">
            <summary>设置 DynamicArea.get_CopyFill() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicArea.AllInstances.CountGet">
            <summary>设置 DynamicArea.get_Count() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicArea.AllInstances.GetAllContainersBoolean">
            <summary>设置 DynamicArea.GetAllContainers(Boolean reset) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicArea.AllInstances.GetNodes">
            <summary>设置 DynamicArea.GetNodes() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicArea.AllInstances.IncreasedBeforeBaseContainer">
            <summary>设置 DynamicArea.IncreasedBefore(BaseContainer subObject) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicArea.AllInstances.IncreasedRowsGet">
            <summary>设置 DynamicArea.get_IncreasedRows() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicArea.AllInstances.RowCountGet">
            <summary>设置 DynamicArea.get_RowCount() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicArea.AllInstances.SourceSetSource">
            <summary>设置 DynamicArea.set_Source(Source value) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicArea.AllInstances.TablesGet">
            <summary>设置 DynamicArea.get_Tables() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicArea.AllInstances.TempleteRowsGet">
            <summary>设置 DynamicArea.get_TempleteRows() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicArea.AllInstances.ToString01">
            <summary>设置 DynamicArea.ToString() 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.ShimDynamicContainer">
            <summary>ExportIO.Export.Entity.DynamicContainer 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimDynamicContainer.#ctor(ExportIO.Export.Entity.DynamicContainer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimDynamicContainer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimDynamicContainer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimDynamicContainer.Bind(ExportIO.Export.Entity.IRuleEntity)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimDynamicContainer.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicContainer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicContainer.ConstructorProductRuleBaseContainerLocation">
            <summary>设置 DynamicContainer.DynamicContainer(ProductRule productRule, BaseContainer container, Location location) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.ShimDynamicContainer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.ShimDynamicSource">
            <summary>ExportIO.Export.Entity.DynamicSource 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimDynamicSource.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimDynamicSource.#ctor(ExportIO.Export.Entity.DynamicSource)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimDynamicSource.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimDynamicSource.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicSource.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicSource.ConstructorProductRule">
            <summary>设置 DynamicSource.DynamicSource(ProductRule productRule) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicSource.ConstructorProductRuleSource">
            <summary>设置 DynamicSource.DynamicSource(ProductRule productRule, Source source) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicSource.CountGet">
            <summary>设置 DynamicSource.get_Count() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicSource.GetDynamicSourceStringInt32IDictionaryOfStringStringIDictionaryOfStringString">
            <summary>设置 DynamicSource.GetDynamicSource(String expression, Int32 index, IDictionary`2&lt;String,String&gt; preExParams, IDictionary`2&lt;String,String&gt; postExParams) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicSource.GetDynamicValueStringInt32IDictionaryOfStringStringIDictionaryOfStringString">
            <summary>设置 DynamicSource.GetDynamicValue(String expression, Int32 index, IDictionary`2&lt;String,String&gt; preExParams, IDictionary`2&lt;String,String&gt; postExParams) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicSource.GetFieldsString">
            <summary>设置 DynamicSource.GetFields(String expression) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicSource.GetSourceIndexes">
            <summary>设置 DynamicSource.GetSourceIndexes() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicSource.NeedDynamicParseString">
            <summary>设置 DynamicSource.NeedDynamicParse(String expresssion) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicSource.SetParamStringFuncOfInt32Int32">
            <summary>设置 DynamicSource.SetParam(String name, Func`2&lt;Int32,Int32&gt; func) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicSource.SourceGet">
            <summary>设置 DynamicSource.get_Source() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicSource.SourceSetSource">
            <summary>设置 DynamicSource.set_Source(Source value) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicSource._GetSourceIndexesb__0DataTableInt32">
            <summary>设置 DynamicSource.&lt;GetSourceIndexes&gt;b__0(DataTable dt, Int32 rowNum) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.ShimDynamicSource.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicSource.AllInstances.CountGet">
            <summary>设置 DynamicSource.get_Count() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicSource.AllInstances.GetDynamicSourceStringInt32IDictionaryOfStringStringIDictionaryOfStringString">
            <summary>设置 DynamicSource.GetDynamicSource(String expression, Int32 index, IDictionary`2&lt;String,String&gt; preExParams, IDictionary`2&lt;String,String&gt; postExParams) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicSource.AllInstances.GetDynamicValueStringInt32IDictionaryOfStringStringIDictionaryOfStringString">
            <summary>设置 DynamicSource.GetDynamicValue(String expression, Int32 index, IDictionary`2&lt;String,String&gt; preExParams, IDictionary`2&lt;String,String&gt; postExParams) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicSource.AllInstances.GetSourceIndexes">
            <summary>设置 DynamicSource.GetSourceIndexes() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicSource.AllInstances.SetParamStringFuncOfInt32Int32">
            <summary>设置 DynamicSource.SetParam(String name, Func`2&lt;Int32,Int32&gt; func) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicSource.AllInstances.SourceGet">
            <summary>设置 DynamicSource.get_Source() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimDynamicSource.AllInstances.SourceSetSource">
            <summary>设置 DynamicSource.set_Source(Source value) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.ShimExportConfig">
            <summary>ExportIO.Export.Entity.ExportConfig 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimExportConfig.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimExportConfig.#ctor(ExportIO.Export.Entity.ExportConfig)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimExportConfig.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimExportConfig.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimExportConfig.Bind(ExportIO.Export.Entity.IRuleEntity)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimExportConfig.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimExportConfig.Constructor">
            <summary>设置 ExportConfig.ExportConfig() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimExportConfig.GetProductRuleString">
            <summary>设置 ExportConfig.GetProductRule(String name) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimExportConfig.LoadDataDataSet">
            <summary>设置 ExportConfig.LoadData(DataSet dataSet) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimExportConfig.LoadDataStringDataSet">
            <summary>设置 ExportConfig.LoadData(String productType, DataSet dataSet) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimExportConfig.ProductTypesGet">
            <summary>设置 ExportConfig.get_ProductTypes() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimExportConfig.ProductTypesSetIListOfProductRule">
            <summary>设置 ExportConfig.set_ProductTypes(IList`1&lt;ProductRule&gt; value) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimExportConfig.ToString">
            <summary>设置 ExportConfig.ToString() 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.ShimExportConfig.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimExportConfig.AllInstances.GetProductRuleString">
            <summary>设置 ExportConfig.GetProductRule(String name) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimExportConfig.AllInstances.LoadDataDataSet">
            <summary>设置 ExportConfig.LoadData(DataSet dataSet) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimExportConfig.AllInstances.LoadDataStringDataSet">
            <summary>设置 ExportConfig.LoadData(String productType, DataSet dataSet) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimExportConfig.AllInstances.ProductTypesGet">
            <summary>设置 ExportConfig.get_ProductTypes() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimExportConfig.AllInstances.ProductTypesSetIListOfProductRule">
            <summary>设置 ExportConfig.set_ProductTypes(IList`1&lt;ProductRule&gt; value) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimExportConfig.AllInstances.ToString01">
            <summary>设置 ExportConfig.ToString() 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.ShimField">
            <summary>ExportIO.Export.Entity.Field 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimField.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimField.#ctor(ExportIO.Export.Entity.Field)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimField.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimField.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimField.Bind(ExportIO.Export.Entity.IRuleEntity)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimField.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimField.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimField.Clone">
            <summary>设置 Field.Clone() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimField.ConstructorTableStringFieldType">
            <summary>设置 Field.Field(Table table, String name, FieldType fieldType) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimField.GetConvert">
            <summary>设置 Field.GetConvert() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimField.GetNodes">
            <summary>设置 Field.GetNodes() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimField.ToString">
            <summary>设置 Field.ToString() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimField._GetConvertorByTypeb__3Object">
            <summary>设置 Field.&lt;GetConvertorByType&gt;b__3(Object p) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimField._GetConvertorByTypeb__4Object">
            <summary>设置 Field.&lt;GetConvertorByType&gt;b__4(Object p) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimField._GetConvertorByTypeb__5Object">
            <summary>设置 Field.&lt;GetConvertorByType&gt;b__5(Object p) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimField._GetConvertorByTypeb__6Object">
            <summary>设置 Field.&lt;GetConvertorByType&gt;b__6(Object p) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimField._GetConvertorByTypeb__7Object">
            <summary>设置 Field.&lt;GetConvertorByType&gt;b__7(Object p) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimField._GetConvertorByTypeb__8Object">
            <summary>设置 Field.&lt;GetConvertorByType&gt;b__8(Object p) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimField._GetConvertorByTypeb__9Object">
            <summary>设置 Field.&lt;GetConvertorByType&gt;b__9(Object p) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.ShimField.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimField.AllInstances.Clone">
            <summary>设置 Field.Clone() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimField.AllInstances.GetConvert">
            <summary>设置 Field.GetConvert() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimField.AllInstances.GetNodes">
            <summary>设置 Field.GetNodes() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimField.AllInstances.ToString01">
            <summary>设置 Field.ToString() 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.ShimListSource">
            <summary>ExportIO.Export.Entity.ListSource 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimListSource.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimListSource.#ctor(ExportIO.Export.Entity.ListSource)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimListSource.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimListSource.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimListSource.Bind(ExportIO.Export.Entity.IRuleEntity)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimListSource.GetValuesOf1FuncOfObjectM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Object,``0},``0[]})">
            <summary>设置 ListSource.GetValues(Func`2&lt;Object,!!0&gt; func) 的 填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimListSource.LoadDataOf1M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0[]})">
            <summary>设置 ListSource.LoadData(!!0[] array) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimListSource.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimListSource.ConstructorString">
            <summary>设置 ListSource.ListSource(String name) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimListSource.ConstructorStringString">
            <summary>设置 ListSource.ListSource(String name, String fieldname) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimListSource.GetStringValues">
            <summary>设置 ListSource.GetStringValues() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimListSource.GetValues">
            <summary>设置 ListSource.GetValues() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimListSource.ToString">
            <summary>设置 ListSource.ToString() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimListSource._GetStringValuesb__0Object">
            <summary>设置 ListSource.&lt;GetStringValues&gt;b__0(Object p) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimListSource._GetValuesb__2Object">
            <summary>设置 ListSource.&lt;GetValues&gt;b__2(Object p) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.ShimListSource.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimListSource.AllInstances.GetValuesOf1FuncOfObjectM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{ExportIO.Export.Entity.ListSource,System.Func{System.Object,``0},``0[]})">
            <summary>设置 ListSource.GetValues(Func`2&lt;Object,!!0&gt; func) 的 填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimListSource.AllInstances.LoadDataOf1M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{ExportIO.Export.Entity.ListSource,``0[]})">
            <summary>设置 ListSource.LoadData(!!0[] array) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimListSource.AllInstances.GetStringValues">
            <summary>设置 ListSource.GetStringValues() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimListSource.AllInstances.GetValues">
            <summary>设置 ListSource.GetValues() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimListSource.AllInstances.ToString01">
            <summary>设置 ListSource.ToString() 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.ShimLocation">
            <summary>ExportIO.Export.Entity.Location 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimLocation.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimLocation.#ctor(ExportIO.Export.Entity.Location)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimLocation.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimLocation.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimLocation.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimLocation.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimLocation.Clone">
            <summary>设置 Location.Clone() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimLocation.Constructor">
            <summary>设置 Location.Location() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimLocation.ConstructorLocation">
            <summary>设置 Location.Location(Location location) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimLocation.ConstructorString">
            <summary>设置 Location.Location(String area) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimLocation.EqualsObject">
            <summary>设置 Location.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimLocation.GetHashCode">
            <summary>设置 Location.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimLocation.ToString">
            <summary>设置 Location.ToString() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimLocation.parseString">
            <summary>设置 Location.parse(String value) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.ShimLocation.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimLocation.AllInstances.Clone">
            <summary>设置 Location.Clone() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimLocation.AllInstances.EqualsObject">
            <summary>设置 Location.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimLocation.AllInstances.GetHashCode01">
            <summary>设置 Location.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimLocation.AllInstances.ToString01">
            <summary>设置 Location.ToString() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimLocation.AllInstances.parseString">
            <summary>设置 Location.parse(String value) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.ShimOutputNode">
            <summary>ExportIO.Export.Entity.OutputNode 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimOutputNode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimOutputNode.#ctor(ExportIO.Export.Entity.OutputNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimOutputNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimOutputNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimOutputNode.AddRenderICellRender">
            <summary>设置 OutputNode.AddRender(ICellRender render) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimOutputNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimOutputNode.Constructor">
            <summary>设置 OutputNode.OutputNode() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimOutputNode.GetRenders">
            <summary>设置 OutputNode.GetRenders() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimOutputNode.IsInAreaInt32Int32">
            <summary>设置 OutputNode.IsInArea(Int32 rowIndex, Int32 colIndex) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimOutputNode.IsRegionGet">
            <summary>设置 OutputNode.get_IsRegion() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimOutputNode.OnRenderICell">
            <summary>设置 OutputNode.OnRender(ICell exCell) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.ShimOutputNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimOutputNode.AllInstances.AddRenderICellRender">
            <summary>设置 OutputNode.AddRender(ICellRender render) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimOutputNode.AllInstances.GetRenders">
            <summary>设置 OutputNode.GetRenders() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimOutputNode.AllInstances.IsInAreaInt32Int32">
            <summary>设置 OutputNode.IsInArea(Int32 rowIndex, Int32 colIndex) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimOutputNode.AllInstances.IsRegionGet">
            <summary>设置 OutputNode.get_IsRegion() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimOutputNode.AllInstances.OnRenderICell">
            <summary>设置 OutputNode.OnRender(ICell exCell) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.ShimProductRule">
            <summary>ExportIO.Export.Entity.ProductRule 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimProductRule.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimProductRule.#ctor(ExportIO.Export.Entity.ProductRule)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimProductRule.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimProductRule.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimProductRule.Bind(ExportIO.Export.Entity.IRuleEntity)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimProductRule.AddSheetSheet">
            <summary>设置 ProductRule.AddSheet(Sheet sheet) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimProductRule.AddSheetsIEnumerableOfSheet">
            <summary>设置 ProductRule.AddSheets(IEnumerable`1&lt;Sheet&gt; sheets) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimProductRule.AddSourceSource">
            <summary>设置 ProductRule.AddSource(Source source) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimProductRule.AddSourcesIEnumerableOfSource">
            <summary>设置 ProductRule.AddSources(IEnumerable`1&lt;Source&gt; list) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimProductRule.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimProductRule.CommentAuthorGet">
            <summary>设置 ProductRule.get_CommentAuthor() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimProductRule.CommentAuthorSetString">
            <summary>设置 ProductRule.set_CommentAuthor(String value) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimProductRule.Constructor">
            <summary>设置 ProductRule.ProductRule() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimProductRule.DataFirstGet">
            <summary>设置 ProductRule.get_DataFirst() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimProductRule.DataFirstSetBoolean">
            <summary>设置 ProductRule.set_DataFirst(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimProductRule.DataSourceGet">
            <summary>设置 ProductRule.get_DataSource() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimProductRule.GetSourceString">
            <summary>设置 ProductRule.GetSource(String name) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimProductRule.LoadDataDataSet">
            <summary>设置 ProductRule.LoadData(DataSet dataSet) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimProductRule.RegistSourceString">
            <summary>设置 ProductRule.RegistSource(String name) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimProductRule.SetSourceSource">
            <summary>设置 ProductRule.SetSource(Source source) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimProductRule.SheetsGet">
            <summary>设置 ProductRule.get_Sheets() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimProductRule.ToString">
            <summary>设置 ProductRule.ToString() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimProductRule._ToStringb__4Source">
            <summary>设置 ProductRule.&lt;ToString&gt;b__4(Source p) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.ShimProductRule.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimProductRule.AllInstances.AddSheetSheet">
            <summary>设置 ProductRule.AddSheet(Sheet sheet) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimProductRule.AllInstances.AddSheetsIEnumerableOfSheet">
            <summary>设置 ProductRule.AddSheets(IEnumerable`1&lt;Sheet&gt; sheets) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimProductRule.AllInstances.AddSourceSource">
            <summary>设置 ProductRule.AddSource(Source source) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimProductRule.AllInstances.AddSourcesIEnumerableOfSource">
            <summary>设置 ProductRule.AddSources(IEnumerable`1&lt;Source&gt; list) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimProductRule.AllInstances.CommentAuthorGet">
            <summary>设置 ProductRule.get_CommentAuthor() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimProductRule.AllInstances.CommentAuthorSetString">
            <summary>设置 ProductRule.set_CommentAuthor(String value) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimProductRule.AllInstances.DataFirstGet">
            <summary>设置 ProductRule.get_DataFirst() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimProductRule.AllInstances.DataFirstSetBoolean">
            <summary>设置 ProductRule.set_DataFirst(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimProductRule.AllInstances.DataSourceGet">
            <summary>设置 ProductRule.get_DataSource() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimProductRule.AllInstances.GetSourceString">
            <summary>设置 ProductRule.GetSource(String name) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimProductRule.AllInstances.LoadDataDataSet">
            <summary>设置 ProductRule.LoadData(DataSet dataSet) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimProductRule.AllInstances.RegistSourceString">
            <summary>设置 ProductRule.RegistSource(String name) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimProductRule.AllInstances.SetSourceSource">
            <summary>设置 ProductRule.SetSource(Source source) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimProductRule.AllInstances.SheetsGet">
            <summary>设置 ProductRule.get_Sheets() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimProductRule.AllInstances.ToString01">
            <summary>设置 ProductRule.ToString() 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.ShimSheet">
            <summary>ExportIO.Export.Entity.Sheet 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimSheet.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimSheet.#ctor(ExportIO.Export.Entity.Sheet)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimSheet.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimSheet.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimSheet.Bind(ExportIO.Export.Entity.IRuleEntity)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimSheet.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSheet.AddCellsIEnumerableOfCell">
            <summary>设置 Sheet.AddCells(IEnumerable`1&lt;Cell&gt; cells) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSheet.AddTablesIEnumerableOfBaseContainer">
            <summary>设置 Sheet.AddTables(IEnumerable`1&lt;BaseContainer&gt; tables) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSheet.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSheet.CellsGet">
            <summary>设置 Sheet.get_Cells() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSheet.Clone">
            <summary>设置 Sheet.Clone() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSheet.ColCountGet">
            <summary>设置 Sheet.get_ColCount() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSheet.ConstructorProductRule">
            <summary>设置 Sheet.Sheet(ProductRule productRule) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSheet.GetDynamics">
            <summary>设置 Sheet.GetDynamics() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSheet.GetExportName">
            <summary>设置 Sheet.GetExportName() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSheet.GetIncreasedRowInt32">
            <summary>设置 Sheet.GetIncreasedRow(Int32 rowIndex) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSheet.GetNodes">
            <summary>设置 Sheet.GetNodes() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSheet.IncreasedBeforeBaseContainer">
            <summary>设置 Sheet.IncreasedBefore(BaseContainer subObject) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSheet.IncreasedRowsGet">
            <summary>设置 Sheet.get_IncreasedRows() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSheet.NameRuleGet">
            <summary>设置 Sheet.get_NameRule() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSheet.NameRuleSetString">
            <summary>设置 Sheet.set_NameRule(String value) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSheet.RowCountGet">
            <summary>设置 Sheet.get_RowCount() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSheet.SetDynamicSourceSource">
            <summary>设置 Sheet.SetDynamicSource(Source source) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSheet.TablesGet">
            <summary>设置 Sheet.get_Tables() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSheet.ToString">
            <summary>设置 Sheet.ToString() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSheet._AddTablesb__0BaseContainerBaseContainer">
            <summary>设置 Sheet.&lt;AddTables&gt;b__0(BaseContainer t1, BaseContainer t2) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSheet._GetIncreasedRowb__8BaseContainer">
            <summary>设置 Sheet.&lt;GetIncreasedRow&gt;b__8(BaseContainer p) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSheet._IncreasedBeforeb__dBaseContainer">
            <summary>设置 Sheet.&lt;IncreasedBefore&gt;b__d(BaseContainer p) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSheet._SetDynamicSourceb__2Int32">
            <summary>设置 Sheet.&lt;SetDynamicSource&gt;b__2(Int32 p) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSheet._SetDynamicSourceb__3Int32">
            <summary>设置 Sheet.&lt;SetDynamicSource&gt;b__3(Int32 p) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSheet._SetDynamicSourceb__4DataTableInt32">
            <summary>设置 Sheet.&lt;SetDynamicSource&gt;b__4(DataTable dt, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSheet.parseExpressionStringDataRow">
            <summary>设置 Sheet.parseExpression(String expression, DataRow row) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.ShimSheet.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSheet.AllInstances.AddCellsIEnumerableOfCell">
            <summary>设置 Sheet.AddCells(IEnumerable`1&lt;Cell&gt; cells) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSheet.AllInstances.AddTablesIEnumerableOfBaseContainer">
            <summary>设置 Sheet.AddTables(IEnumerable`1&lt;BaseContainer&gt; tables) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSheet.AllInstances.CellsGet">
            <summary>设置 Sheet.get_Cells() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSheet.AllInstances.Clone">
            <summary>设置 Sheet.Clone() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSheet.AllInstances.ColCountGet">
            <summary>设置 Sheet.get_ColCount() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSheet.AllInstances.GetDynamics">
            <summary>设置 Sheet.GetDynamics() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSheet.AllInstances.GetExportName">
            <summary>设置 Sheet.GetExportName() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSheet.AllInstances.GetIncreasedRowInt32">
            <summary>设置 Sheet.GetIncreasedRow(Int32 rowIndex) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSheet.AllInstances.GetNodes">
            <summary>设置 Sheet.GetNodes() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSheet.AllInstances.IncreasedBeforeBaseContainer">
            <summary>设置 Sheet.IncreasedBefore(BaseContainer subObject) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSheet.AllInstances.IncreasedRowsGet">
            <summary>设置 Sheet.get_IncreasedRows() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSheet.AllInstances.NameRuleGet">
            <summary>设置 Sheet.get_NameRule() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSheet.AllInstances.NameRuleSetString">
            <summary>设置 Sheet.set_NameRule(String value) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSheet.AllInstances.RowCountGet">
            <summary>设置 Sheet.get_RowCount() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSheet.AllInstances.SetDynamicSourceSource">
            <summary>设置 Sheet.SetDynamicSource(Source source) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSheet.AllInstances.TablesGet">
            <summary>设置 Sheet.get_Tables() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSheet.AllInstances.ToString01">
            <summary>设置 Sheet.ToString() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSheet.AllInstances._SetDynamicSourceb__4DataTableInt32">
            <summary>设置 Sheet.&lt;SetDynamicSource&gt;b__4(DataTable dt, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSheet.AllInstances.parseExpressionStringDataRow">
            <summary>设置 Sheet.parseExpression(String expression, DataRow row) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.ShimSource">
            <summary>ExportIO.Export.Entity.Source 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimSource.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimSource.#ctor(ExportIO.Export.Entity.Source)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimSource.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimSource.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimSource.Bind(ExportIO.Export.Entity.IRuleEntity)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimSource.GetValuesOf1Int32FuncOfObjectM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,System.Func{System.Object,``0},System.Collections.Generic.IList{``0}})">
            <summary>设置 Source.GetValues(Int32 colIndex, Func`2&lt;Object,!!0&gt; func) 的 填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimSource.GetValuesOf1StringFuncOfObjectM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Func{System.Object,``0},System.Collections.Generic.IList{``0}})">
            <summary>设置 Source.GetValues(String field, Func`2&lt;Object,!!0&gt; func) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSource.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSource.Constructor">
            <summary>设置 Source.Source() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSource.ConstructorString">
            <summary>设置 Source.Source(String name) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSource.ContainsString">
            <summary>设置 Source.Contains(String field) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSource.GetInt32">
            <summary>设置 Source.Get(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSource.GetValuesString">
            <summary>设置 Source.GetValues(String field) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSource.GroupTokenStringArray">
            <summary>设置 Source.GroupToken(String[] fields) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSource.IsEmpty">
            <summary>设置 Source.IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSource.ToString">
            <summary>设置 Source.ToString() 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.ShimSource.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimSource.AllInstances.GetValuesOf1Int32FuncOfObjectM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{ExportIO.Export.Entity.Source,System.Int32,System.Func{System.Object,``0},System.Collections.Generic.IList{``0}})">
            <summary>设置 Source.GetValues(Int32 colIndex, Func`2&lt;Object,!!0&gt; func) 的 填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimSource.AllInstances.GetValuesOf1StringFuncOfObjectM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{ExportIO.Export.Entity.Source,System.String,System.Func{System.Object,``0},System.Collections.Generic.IList{``0}})">
            <summary>设置 Source.GetValues(String field, Func`2&lt;Object,!!0&gt; func) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSource.AllInstances.ContainsString">
            <summary>设置 Source.Contains(String field) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSource.AllInstances.GetInt32">
            <summary>设置 Source.Get(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSource.AllInstances.GetValuesString">
            <summary>设置 Source.GetValues(String field) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSource.AllInstances.GroupTokenStringArray">
            <summary>设置 Source.GroupToken(String[] fields) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSource.AllInstances.IsEmpty">
            <summary>设置 Source.IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSource.AllInstances.ToString01">
            <summary>设置 Source.ToString() 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.ShimSourceRelation">
            <summary>ExportIO.Export.Entity.SourceRelation 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimSourceRelation.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimSourceRelation.#ctor(ExportIO.Export.Entity.SourceRelation)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimSourceRelation.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimSourceRelation.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSourceRelation.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSourceRelation.Constructor">
            <summary>设置 SourceRelation.SourceRelation() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSourceRelation.GetReferencedData">
            <summary>设置 SourceRelation.GetReferencedData() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSourceRelation.GetReferencedRows">
            <summary>设置 SourceRelation.GetReferencedRows() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSourceRelation.ToStringString">
            <summary>设置 SourceRelation.ToString(String attribute) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSourceRelation._GetReferencedDatab__4DataRow">
            <summary>设置 SourceRelation.&lt;GetReferencedData&gt;b__4(DataRow p) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSourceRelation._GetReferencedRowsb__0DataRow">
            <summary>设置 SourceRelation.&lt;GetReferencedRows&gt;b__0(DataRow p) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.ShimSourceRelation.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSourceRelation.AllInstances.GetReferencedData">
            <summary>设置 SourceRelation.GetReferencedData() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSourceRelation.AllInstances.GetReferencedRows">
            <summary>设置 SourceRelation.GetReferencedRows() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSourceRelation.AllInstances.ToStringString">
            <summary>设置 SourceRelation.ToString(String attribute) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSourceRelation.AllInstances._GetReferencedDatab__4DataRow">
            <summary>设置 SourceRelation.&lt;GetReferencedData&gt;b__4(DataRow p) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimSourceRelation.AllInstances._GetReferencedRowsb__0DataRow">
            <summary>设置 SourceRelation.&lt;GetReferencedRows&gt;b__0(DataRow p) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.ShimTable">
            <summary>ExportIO.Export.Entity.Table 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimTable.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimTable.#ctor(ExportIO.Export.Entity.Table)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimTable.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimTable.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimTable.Bind(ExportIO.Export.Entity.IRuleEntity)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimTable.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.AddFieldField">
            <summary>设置 Table.AddField(Field field) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.AddFieldsIEnumerableOfField">
            <summary>设置 Table.AddFields(IEnumerable`1&lt;Field&gt; fields) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.AddSumColumnsIEnumerableOfInt32">
            <summary>设置 Table.AddSumColumns(IEnumerable`1&lt;Int32&gt; colIndexes) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.AddSumColumnsIEnumerableOfString">
            <summary>设置 Table.AddSumColumns(IEnumerable`1&lt;String&gt; columns) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.AdjustSumOffset">
            <summary>设置 Table.AdjustSumOffset() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.CalculateArea">
            <summary>设置 Table.CalculateArea() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.Clone">
            <summary>设置 Table.Clone() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.ColCountGet">
            <summary>设置 Table.get_ColCount() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.ConstructorProductRuleBaseContainerLocation">
            <summary>设置 Table.Table(ProductRule productRule, BaseContainer container, Location location) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.EqualsObject">
            <summary>设置 Table.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.FieldsGet">
            <summary>设置 Table.get_Fields() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.GetGroupedValuesField">
            <summary>设置 Table.GetGroupedValues(Field field) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.GetHashCode">
            <summary>设置 Table.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.GetNodes">
            <summary>设置 Table.GetNodes() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.GetSource">
            <summary>设置 Table.GetSource() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.GetSumRowIndex">
            <summary>设置 Table.GetSumRowIndex() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.GetValueInt32String">
            <summary>设置 Table.GetValue(Int32 index, String field) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.GetValuesStringBoolean">
            <summary>设置 Table.GetValues(String field, Boolean distinct) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.IncreasedBeforeBaseContainer">
            <summary>设置 Table.IncreasedBefore(BaseContainer subObject) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.IncreasedRowsGet">
            <summary>设置 Table.get_IncreasedRows() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.IsValidField">
            <summary>设置 Table.IsValid(Field field) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.RowCountGet">
            <summary>设置 Table.get_RowCount() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.SetDataDataTable">
            <summary>设置 Table.SetData(DataTable data) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.SetGroupBooleanArray">
            <summary>设置 Table.SetGroup(Boolean[] groupList) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.SetSourceSource">
            <summary>设置 Table.SetSource(Source source) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.SumColumnsGet">
            <summary>设置 Table.get_SumColumns() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.ToString">
            <summary>设置 Table.ToString() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable._CalculateAreab__8Field">
            <summary>设置 Table.&lt;CalculateArea&gt;b__8(Field p) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable._CalculateAreab__9Field">
            <summary>设置 Table.&lt;CalculateArea&gt;b__9(Field p) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable._CalculateAreab__aFieldField">
            <summary>设置 Table.&lt;CalculateArea&gt;b__a(Field f1, Field f2) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable._GetGroupedValuesb__11Field">
            <summary>设置 Table.&lt;GetGroupedValues&gt;b__11(Field p) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable._GetNodesb__15Object">
            <summary>设置 Table.&lt;GetNodes&gt;b__15(Object p) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable._GetNodesb__16Object">
            <summary>设置 Table.&lt;GetNodes&gt;b__16(Object p) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable._ToStringb__1dInt32">
            <summary>设置 Table.&lt;ToString&gt;b__1d(Int32 p) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable._ToStringb__1eBoolean">
            <summary>设置 Table.&lt;ToString&gt;b__1e(Boolean p) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.ShimTable.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.AllInstances.AddFieldField">
            <summary>设置 Table.AddField(Field field) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.AllInstances.AddFieldsIEnumerableOfField">
            <summary>设置 Table.AddFields(IEnumerable`1&lt;Field&gt; fields) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.AllInstances.AddSumColumnsIEnumerableOfInt32">
            <summary>设置 Table.AddSumColumns(IEnumerable`1&lt;Int32&gt; colIndexes) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.AllInstances.AddSumColumnsIEnumerableOfString">
            <summary>设置 Table.AddSumColumns(IEnumerable`1&lt;String&gt; columns) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.AllInstances.AdjustSumOffset">
            <summary>设置 Table.AdjustSumOffset() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.AllInstances.CalculateArea">
            <summary>设置 Table.CalculateArea() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.AllInstances.Clone">
            <summary>设置 Table.Clone() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.AllInstances.ColCountGet">
            <summary>设置 Table.get_ColCount() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.AllInstances.EqualsObject">
            <summary>设置 Table.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.AllInstances.FieldsGet">
            <summary>设置 Table.get_Fields() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.AllInstances.GetGroupedValuesField">
            <summary>设置 Table.GetGroupedValues(Field field) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.AllInstances.GetHashCode01">
            <summary>设置 Table.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.AllInstances.GetNodes">
            <summary>设置 Table.GetNodes() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.AllInstances.GetSource">
            <summary>设置 Table.GetSource() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.AllInstances.GetSumRowIndex">
            <summary>设置 Table.GetSumRowIndex() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.AllInstances.GetValueInt32String">
            <summary>设置 Table.GetValue(Int32 index, String field) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.AllInstances.GetValuesStringBoolean">
            <summary>设置 Table.GetValues(String field, Boolean distinct) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.AllInstances.IncreasedBeforeBaseContainer">
            <summary>设置 Table.IncreasedBefore(BaseContainer subObject) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.AllInstances.IncreasedRowsGet">
            <summary>设置 Table.get_IncreasedRows() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.AllInstances.IsValidField">
            <summary>设置 Table.IsValid(Field field) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.AllInstances.RowCountGet">
            <summary>设置 Table.get_RowCount() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.AllInstances.SetDataDataTable">
            <summary>设置 Table.SetData(DataTable data) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.AllInstances.SetGroupBooleanArray">
            <summary>设置 Table.SetGroup(Boolean[] groupList) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.AllInstances.SetSourceSource">
            <summary>设置 Table.SetSource(Source source) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.AllInstances.SumColumnsGet">
            <summary>设置 Table.get_SumColumns() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTable.AllInstances.ToString01">
            <summary>设置 Table.ToString() 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.ShimTreeSource">
            <summary>ExportIO.Export.Entity.TreeSource 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimTreeSource.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimTreeSource.#ctor(ExportIO.Export.Entity.TreeSource)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimTreeSource.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimTreeSource.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.ShimTreeSource.Bind(ExportIO.Export.Entity.IRuleEntity)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTreeSource.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTreeSource.ConstructorString">
            <summary>设置 TreeSource.TreeSource(String name) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTreeSource.ConstructorStringStringStringString">
            <summary>设置 TreeSource.TreeSource(String name, String content, String idField, String pIdField) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTreeSource.GetParentIdObject">
            <summary>设置 TreeSource.GetParentId(Object id) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTreeSource.GetParentObject">
            <summary>设置 TreeSource.GetParent(Object id) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTreeSource.GetRowObject">
            <summary>设置 TreeSource.GetRow(Object id) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTreeSource.ToString">
            <summary>设置 TreeSource.ToString() 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.ShimTreeSource.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTreeSource.AllInstances.GetParentIdObject">
            <summary>设置 TreeSource.GetParentId(Object id) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTreeSource.AllInstances.GetParentObject">
            <summary>设置 TreeSource.GetParent(Object id) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTreeSource.AllInstances.GetRowObject">
            <summary>设置 TreeSource.GetRow(Object id) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.ShimTreeSource.AllInstances.ToString01">
            <summary>设置 TreeSource.ToString() 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.StubBaseContainer">
            <summary>ExportIO.Export.Entity.BaseContainer 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubBaseContainer.#ctor(ExportIO.Export.Entity.ProductRule,ExportIO.Export.Entity.BaseContainer,ExportIO.Export.Entity.Location)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubBaseContainer.AttachBackingFieldToCopyFill">
            <summary>附加委托以将 StubBaseContainer.CopyFill 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubBaseContainer.AttachBackingFieldToTempleteRows">
            <summary>附加委托以将 StubBaseContainer.TempleteRows 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubBaseContainer.Clone">
            <summary>设置 BaseContainer.Clone() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubBaseContainer.Clone01">
            <summary>设置 BaseContainer.Clone() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubBaseContainer.ColCountGet">
            <summary>设置 BaseContainer.get_ColCount() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubBaseContainer.CopyFillGet">
            <summary>设置 BaseContainer.get_CopyFill() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubBaseContainer.CopyFillSetBoolean">
            <summary>设置 BaseContainer.set_CopyFill(Boolean value) 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubBaseContainer.GetNodes">
            <summary>设置 BaseContainer.GetNodes() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubBaseContainer.GetNodes01">
            <summary>设置 BaseContainer.GetNodes() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubBaseContainer.IncreasedBefore(ExportIO.Export.Entity.BaseContainer)">
            <summary>设置 BaseContainer.IncreasedBefore(BaseContainer subObject) 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubBaseContainer.IncreasedBeforeBaseContainer">
            <summary>设置 BaseContainer.IncreasedBefore(BaseContainer subObject) 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubBaseContainer.IncreasedRowsGet">
            <summary>设置 BaseContainer.get_IncreasedRows() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubBaseContainer.InitializeStub">
            <summary>初始化 type StubBaseContainer 的新实例</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubBaseContainer.RowCountGet">
            <summary>设置 BaseContainer.get_RowCount() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubBaseContainer.TempleteRowsGet">
            <summary>设置 BaseContainer.get_TempleteRows() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubBaseContainer.TempleteRowsSetInt32">
            <summary>设置 BaseContainer.set_TempleteRows(Int32 value) 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubBaseContainer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubBaseContainer.ColCount">
            <summary>设置 BaseContainer.get_ColCount() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubBaseContainer.CopyFill">
            <summary>设置 BaseContainer.get_CopyFill() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubBaseContainer.IncreasedRows">
            <summary>设置 BaseContainer.get_IncreasedRows() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubBaseContainer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubBaseContainer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubBaseContainer.RowCount">
            <summary>设置 BaseContainer.get_RowCount() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubBaseContainer.TempleteRows">
            <summary>设置 BaseContainer.get_TempleteRows() 的 stub</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.StubBaseSource">
            <summary>ExportIO.Export.Entity.BaseSource 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubBaseSource.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubBaseSource.InitializeStub">
            <summary>初始化 type StubBaseSource 的新实例</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubBaseSource.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubBaseSource.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubBaseSource.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.StubCell">
            <summary>ExportIO.Export.Entity.Cell 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubCell.#ctor(ExportIO.Export.Entity.ProductRule,ExportIO.Export.Entity.BaseContainer,ExportIO.Export.Entity.Location)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubCell.AttachBackingFieldToTempleteRows">
            <summary>附加委托以将 StubCell.TempleteRows 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubCell.Clone">
            <summary>设置 Cell.Clone() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubCell.Clone01">
            <summary>设置 Cell.Clone() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubCell.ColCountGet">
            <summary>设置 Cell.get_ColCount() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubCell.CopyFillGet">
            <summary>设置 Cell.get_CopyFill() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubCell.GetNodes">
            <summary>设置 Cell.GetNodes() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubCell.GetNodes01">
            <summary>设置 Cell.GetNodes() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubCell.IncreasedBefore(ExportIO.Export.Entity.BaseContainer)">
            <summary>设置 BaseContainer.IncreasedBefore(BaseContainer subObject) 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubCell.IncreasedBeforeBaseContainer">
            <summary>设置 BaseContainer.IncreasedBefore(BaseContainer subObject) 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubCell.IncreasedRowsGet">
            <summary>设置 BaseContainer.get_IncreasedRows() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubCell.InitializeStub">
            <summary>初始化 type StubCell 的新实例</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubCell.RowCountGet">
            <summary>设置 Cell.get_RowCount() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubCell.TempleteRowsGet">
            <summary>设置 BaseContainer.get_TempleteRows() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubCell.TempleteRowsSetInt32">
            <summary>设置 BaseContainer.set_TempleteRows(Int32 value) 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubCell.ToString">
            <summary>设置 Cell.ToString() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubCell.ToString01">
            <summary>设置 Cell.ToString() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubCell.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubCell.ColCount">
            <summary>设置 Cell.get_ColCount() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubCell.CopyFill">
            <summary>设置 Cell.get_CopyFill() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubCell.IncreasedRows">
            <summary>设置 BaseContainer.get_IncreasedRows() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubCell.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubCell.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubCell.RowCount">
            <summary>设置 Cell.get_RowCount() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubCell.TempleteRows">
            <summary>设置 BaseContainer.get_TempleteRows() 的 stub</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.StubDynamicArea">
            <summary>ExportIO.Export.Entity.DynamicArea 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubDynamicArea.#ctor(ExportIO.Export.Entity.ProductRule,ExportIO.Export.Entity.BaseContainer,ExportIO.Export.Entity.Location)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubDynamicArea.Clone">
            <summary>设置 DynamicArea.Clone() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubDynamicArea.Clone01">
            <summary>设置 DynamicArea.Clone() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubDynamicArea.ColCountGet">
            <summary>设置 DynamicArea.get_ColCount() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubDynamicArea.CopyFillGet">
            <summary>设置 DynamicArea.get_CopyFill() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubDynamicArea.GetNodes">
            <summary>设置 DynamicArea.GetNodes() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubDynamicArea.GetNodes01">
            <summary>设置 DynamicArea.GetNodes() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubDynamicArea.IncreasedBefore(ExportIO.Export.Entity.BaseContainer)">
            <summary>设置 DynamicArea.IncreasedBefore(BaseContainer subObject) 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubDynamicArea.IncreasedBeforeBaseContainer">
            <summary>设置 DynamicArea.IncreasedBefore(BaseContainer subObject) 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubDynamicArea.IncreasedRowsGet">
            <summary>设置 DynamicArea.get_IncreasedRows() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubDynamicArea.InitializeStub">
            <summary>初始化 type StubDynamicArea 的新实例</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubDynamicArea.RowCountGet">
            <summary>设置 DynamicArea.get_RowCount() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubDynamicArea.TempleteRowsGet">
            <summary>设置 DynamicArea.get_TempleteRows() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubDynamicArea.ToString">
            <summary>设置 DynamicArea.ToString() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubDynamicArea.ToString01">
            <summary>设置 DynamicArea.ToString() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubDynamicArea.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubDynamicArea.ColCount">
            <summary>设置 DynamicArea.get_ColCount() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubDynamicArea.CopyFill">
            <summary>设置 DynamicArea.get_CopyFill() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubDynamicArea.IncreasedRows">
            <summary>设置 DynamicArea.get_IncreasedRows() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubDynamicArea.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubDynamicArea.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubDynamicArea.RowCount">
            <summary>设置 DynamicArea.get_RowCount() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubDynamicArea.TempleteRows">
            <summary>设置 DynamicArea.get_TempleteRows() 的 stub</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.StubDynamicContainer">
            <summary>ExportIO.Export.Entity.DynamicContainer 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubDynamicContainer.#ctor(ExportIO.Export.Entity.ProductRule,ExportIO.Export.Entity.BaseContainer,ExportIO.Export.Entity.Location)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubDynamicContainer.AttachBackingFieldToCopyFill">
            <summary>附加委托以将 StubDynamicContainer.CopyFill 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubDynamicContainer.AttachBackingFieldToTempleteRows">
            <summary>附加委托以将 StubDynamicContainer.TempleteRows 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubDynamicContainer.Clone">
            <summary>设置 DynamicContainer.Clone() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubDynamicContainer.Clone01">
            <summary>设置 DynamicContainer.Clone() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubDynamicContainer.ColCountGet">
            <summary>设置 DynamicContainer.get_ColCount() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubDynamicContainer.CopyFillGet">
            <summary>设置 BaseContainer.get_CopyFill() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubDynamicContainer.CopyFillSetBoolean">
            <summary>设置 BaseContainer.set_CopyFill(Boolean value) 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubDynamicContainer.CountGet">
            <summary>设置 DynamicContainer.get_Count() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubDynamicContainer.GetNodes">
            <summary>设置 DynamicContainer.GetNodes() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubDynamicContainer.GetNodes01">
            <summary>设置 DynamicContainer.GetNodes() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubDynamicContainer.IncreasedBefore(ExportIO.Export.Entity.BaseContainer)">
            <summary>设置 BaseContainer.IncreasedBefore(BaseContainer subObject) 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubDynamicContainer.IncreasedBeforeBaseContainer">
            <summary>设置 BaseContainer.IncreasedBefore(BaseContainer subObject) 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubDynamicContainer.IncreasedRowsGet">
            <summary>设置 BaseContainer.get_IncreasedRows() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubDynamicContainer.InitializeStub">
            <summary>初始化 type StubDynamicContainer 的新实例</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubDynamicContainer.RowCountGet">
            <summary>设置 DynamicContainer.get_RowCount() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubDynamicContainer.TempleteRowsGet">
            <summary>设置 BaseContainer.get_TempleteRows() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubDynamicContainer.TempleteRowsSetInt32">
            <summary>设置 BaseContainer.set_TempleteRows(Int32 value) 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubDynamicContainer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubDynamicContainer.ColCount">
            <summary>设置 DynamicContainer.get_ColCount() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubDynamicContainer.CopyFill">
            <summary>设置 BaseContainer.get_CopyFill() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubDynamicContainer.Count">
            <summary>设置 DynamicContainer.get_Count() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubDynamicContainer.IncreasedRows">
            <summary>设置 BaseContainer.get_IncreasedRows() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubDynamicContainer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubDynamicContainer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubDynamicContainer.RowCount">
            <summary>设置 DynamicContainer.get_RowCount() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubDynamicContainer.TempleteRows">
            <summary>设置 BaseContainer.get_TempleteRows() 的 stub</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.StubDynamicSource">
            <summary>ExportIO.Export.Entity.DynamicSource 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubDynamicSource.#ctor(ExportIO.Export.Entity.ProductRule)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubDynamicSource.#ctor(ExportIO.Export.Entity.ProductRule,ExportIO.Export.Entity.Source)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubDynamicSource.InitializeStub">
            <summary>初始化 type StubDynamicSource 的新实例</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubDynamicSource.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubDynamicSource.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubDynamicSource.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.StubExportConfig">
            <summary>ExportIO.Export.Entity.ExportConfig 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubExportConfig.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubExportConfig.InitializeStub">
            <summary>初始化 type StubExportConfig 的新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubExportConfig.ToString">
            <summary>设置 ExportConfig.ToString() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubExportConfig.ToString01">
            <summary>设置 ExportConfig.ToString() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubExportConfig.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubExportConfig.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubExportConfig.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.StubField">
            <summary>ExportIO.Export.Entity.Field 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubField.#ctor(ExportIO.Export.Entity.Table,System.String,ExportIO.Export.Entity.FieldType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubField.InitializeStub">
            <summary>初始化 type StubField 的新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubField.ToString">
            <summary>设置 Field.ToString() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubField.ToString01">
            <summary>设置 Field.ToString() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubField.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubField.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubField.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.StubIRuleEntity">
            <summary>ExportIO.Export.Entity.IRuleEntity 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubIRuleEntity.#ctor">
            <summary>初始化 type StubIRuleEntity 的新实例</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.StubListSource">
            <summary>ExportIO.Export.Entity.ListSource 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubListSource.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubListSource.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubListSource.InitializeStub">
            <summary>初始化 type StubListSource 的新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubListSource.ToString">
            <summary>设置 ListSource.ToString() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubListSource.ToString01">
            <summary>设置 ListSource.ToString() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubListSource.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubListSource.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubListSource.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.StubLocation">
            <summary>ExportIO.Export.Entity.Location 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubLocation.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubLocation.#ctor(ExportIO.Export.Entity.Location)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubLocation.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubLocation.Equals(System.Object)">
            <summary>设置 Location.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubLocation.EqualsObject">
            <summary>设置 Location.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubLocation.GetHashCode">
            <summary>设置 Location.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubLocation.GetHashCode01">
            <summary>设置 Location.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubLocation.InitializeStub">
            <summary>初始化 type StubLocation 的新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubLocation.ToString">
            <summary>设置 Location.ToString() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubLocation.ToString01">
            <summary>设置 Location.ToString() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubLocation.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubLocation.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubLocation.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.StubOutputNode">
            <summary>ExportIO.Export.Entity.OutputNode 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubOutputNode.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubOutputNode.InitializeStub">
            <summary>初始化 type StubOutputNode 的新实例</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubOutputNode.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubOutputNode.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubOutputNode.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.StubProductRule">
            <summary>ExportIO.Export.Entity.ProductRule 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubProductRule.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubProductRule.InitializeStub">
            <summary>初始化 type StubProductRule 的新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubProductRule.ToString">
            <summary>设置 ProductRule.ToString() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubProductRule.ToString01">
            <summary>设置 ProductRule.ToString() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubProductRule.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubProductRule.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubProductRule.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.StubSheet">
            <summary>ExportIO.Export.Entity.Sheet 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubSheet.#ctor(ExportIO.Export.Entity.ProductRule)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubSheet.AttachBackingFieldToCopyFill">
            <summary>附加委托以将 StubSheet.CopyFill 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubSheet.AttachBackingFieldToTempleteRows">
            <summary>附加委托以将 StubSheet.TempleteRows 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubSheet.Clone">
            <summary>设置 Sheet.Clone() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubSheet.Clone01">
            <summary>设置 Sheet.Clone() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubSheet.ColCountGet">
            <summary>设置 Sheet.get_ColCount() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubSheet.CopyFillGet">
            <summary>设置 BaseContainer.get_CopyFill() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubSheet.CopyFillSetBoolean">
            <summary>设置 BaseContainer.set_CopyFill(Boolean value) 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubSheet.GetNodes">
            <summary>设置 Sheet.GetNodes() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubSheet.GetNodes01">
            <summary>设置 Sheet.GetNodes() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubSheet.IncreasedBefore(ExportIO.Export.Entity.BaseContainer)">
            <summary>设置 Sheet.IncreasedBefore(BaseContainer subObject) 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubSheet.IncreasedBeforeBaseContainer">
            <summary>设置 Sheet.IncreasedBefore(BaseContainer subObject) 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubSheet.IncreasedRowsGet">
            <summary>设置 Sheet.get_IncreasedRows() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubSheet.InitializeStub">
            <summary>初始化 type StubSheet 的新实例</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubSheet.RowCountGet">
            <summary>设置 Sheet.get_RowCount() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubSheet.TempleteRowsGet">
            <summary>设置 BaseContainer.get_TempleteRows() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubSheet.TempleteRowsSetInt32">
            <summary>设置 BaseContainer.set_TempleteRows(Int32 value) 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubSheet.ToString">
            <summary>设置 Sheet.ToString() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubSheet.ToString01">
            <summary>设置 Sheet.ToString() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubSheet.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubSheet.ColCount">
            <summary>设置 Sheet.get_ColCount() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubSheet.CopyFill">
            <summary>设置 BaseContainer.get_CopyFill() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubSheet.IncreasedRows">
            <summary>设置 Sheet.get_IncreasedRows() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubSheet.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubSheet.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubSheet.RowCount">
            <summary>设置 Sheet.get_RowCount() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubSheet.TempleteRows">
            <summary>设置 BaseContainer.get_TempleteRows() 的 stub</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.StubSource">
            <summary>ExportIO.Export.Entity.Source 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubSource.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubSource.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubSource.InitializeStub">
            <summary>初始化 type StubSource 的新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubSource.ToString">
            <summary>设置 Source.ToString() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubSource.ToString01">
            <summary>设置 Source.ToString() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubSource.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubSource.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubSource.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.StubSourceRelation">
            <summary>ExportIO.Export.Entity.SourceRelation 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubSourceRelation.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubSourceRelation.InitializeStub">
            <summary>初始化 type StubSourceRelation 的新实例</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubSourceRelation.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubSourceRelation.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubSourceRelation.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.StubTable">
            <summary>ExportIO.Export.Entity.Table 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubTable.#ctor(ExportIO.Export.Entity.ProductRule,ExportIO.Export.Entity.BaseContainer,ExportIO.Export.Entity.Location)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubTable.AttachBackingFieldToCopyFill">
            <summary>附加委托以将 StubTable.CopyFill 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubTable.AttachBackingFieldToTempleteRows">
            <summary>附加委托以将 StubTable.TempleteRows 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubTable.Clone">
            <summary>设置 Table.Clone() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubTable.Clone01">
            <summary>设置 Table.Clone() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubTable.ColCountGet">
            <summary>设置 Table.get_ColCount() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubTable.CopyFillGet">
            <summary>设置 BaseContainer.get_CopyFill() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubTable.CopyFillSetBoolean">
            <summary>设置 BaseContainer.set_CopyFill(Boolean value) 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubTable.Equals(System.Object)">
            <summary>设置 Table.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubTable.EqualsObject">
            <summary>设置 Table.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubTable.GetHashCode">
            <summary>设置 Table.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubTable.GetHashCode01">
            <summary>设置 Table.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubTable.GetNodes">
            <summary>设置 Table.GetNodes() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubTable.GetNodes01">
            <summary>设置 Table.GetNodes() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubTable.IncreasedBefore(ExportIO.Export.Entity.BaseContainer)">
            <summary>设置 Table.IncreasedBefore(BaseContainer subObject) 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubTable.IncreasedBeforeBaseContainer">
            <summary>设置 Table.IncreasedBefore(BaseContainer subObject) 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubTable.IncreasedRowsGet">
            <summary>设置 Table.get_IncreasedRows() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubTable.InitializeStub">
            <summary>初始化 type StubTable 的新实例</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubTable.RowCountGet">
            <summary>设置 Table.get_RowCount() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubTable.TempleteRowsGet">
            <summary>设置 BaseContainer.get_TempleteRows() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubTable.TempleteRowsSetInt32">
            <summary>设置 BaseContainer.set_TempleteRows(Int32 value) 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubTable.ToString">
            <summary>设置 Table.ToString() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubTable.ToString01">
            <summary>设置 Table.ToString() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubTable.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubTable.ColCount">
            <summary>设置 Table.get_ColCount() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubTable.CopyFill">
            <summary>设置 BaseContainer.get_CopyFill() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubTable.IncreasedRows">
            <summary>设置 Table.get_IncreasedRows() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubTable.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubTable.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubTable.RowCount">
            <summary>设置 Table.get_RowCount() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubTable.TempleteRows">
            <summary>设置 BaseContainer.get_TempleteRows() 的 stub</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Fakes.StubTreeSource">
            <summary>ExportIO.Export.Entity.TreeSource 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubTreeSource.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubTreeSource.#ctor(System.String,System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubTreeSource.InitializeStub">
            <summary>初始化 type StubTreeSource 的新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Fakes.StubTreeSource.ToString">
            <summary>设置 TreeSource.ToString() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Fakes.StubTreeSource.ToString01">
            <summary>设置 TreeSource.ToString() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubTreeSource.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubTreeSource.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Fakes.StubTreeSource.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Region.Fakes.ShimBodyRegion">
            <summary>ExportIO.Export.Entity.Region.BodyRegion 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.ShimBodyRegion.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.ShimBodyRegion.#ctor(ExportIO.Export.Entity.Region.BodyRegion)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.ShimBodyRegion.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.ShimBodyRegion.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.ShimBodyRegion.Bind(ExportIO.Export.Entity.IRuleEntity)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimBodyRegion.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimBodyRegion.CalulateNodes">
            <summary>设置 BodyRegion.CalulateNodes() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimBodyRegion.ColumnCountGet">
            <summary>设置 BodyRegion.get_ColumnCount() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimBodyRegion.ColumnIndexGet">
            <summary>设置 BodyRegion.get_ColumnIndex() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimBodyRegion.ConstructorRegionTable">
            <summary>设置 BodyRegion.BodyRegion(RegionTable table) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimBodyRegion.RowCountGet">
            <summary>设置 BodyRegion.get_RowCount() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimBodyRegion.RowIndexGet">
            <summary>设置 BodyRegion.get_RowIndex() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimBodyRegion.ToString">
            <summary>设置 BodyRegion.ToString() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimBodyRegion._CalulateNodesb__5OutputNode">
            <summary>设置 BodyRegion.&lt;CalulateNodes&gt;b__5(OutputNode p) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimBodyRegion._CalulateNodesb__6OutputNode">
            <summary>设置 BodyRegion.&lt;CalulateNodes&gt;b__6(OutputNode p) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimBodyRegion._CalulateNodesb__aOutputNode">
            <summary>设置 BodyRegion.&lt;CalulateNodes&gt;b__a(OutputNode p) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Region.Fakes.ShimBodyRegion.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimBodyRegion.AllInstances.CalulateNodes">
            <summary>设置 BodyRegion.CalulateNodes() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimBodyRegion.AllInstances.ColumnCountGet">
            <summary>设置 BodyRegion.get_ColumnCount() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimBodyRegion.AllInstances.ColumnIndexGet">
            <summary>设置 BodyRegion.get_ColumnIndex() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimBodyRegion.AllInstances.RowCountGet">
            <summary>设置 BodyRegion.get_RowCount() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimBodyRegion.AllInstances.RowIndexGet">
            <summary>设置 BodyRegion.get_RowIndex() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimBodyRegion.AllInstances.ToString01">
            <summary>设置 BodyRegion.ToString() 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Region.Fakes.ShimColumnHeaderRegion">
            <summary>ExportIO.Export.Entity.Region.ColumnHeaderRegion 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.ShimColumnHeaderRegion.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.ShimColumnHeaderRegion.#ctor(ExportIO.Export.Entity.Region.ColumnHeaderRegion)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.ShimColumnHeaderRegion.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.ShimColumnHeaderRegion.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.ShimColumnHeaderRegion.Bind(ExportIO.Export.Entity.IRuleEntity)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimColumnHeaderRegion.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimColumnHeaderRegion.CalulateNodes">
            <summary>设置 ColumnHeaderRegion.CalulateNodes() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimColumnHeaderRegion.ColumnCountGet">
            <summary>设置 ColumnHeaderRegion.get_ColumnCount() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimColumnHeaderRegion.ColumnIndexGet">
            <summary>设置 ColumnHeaderRegion.get_ColumnIndex() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimColumnHeaderRegion.ConstructorRegionTable">
            <summary>设置 ColumnHeaderRegion.ColumnHeaderRegion(RegionTable table) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimColumnHeaderRegion.RowCountGet">
            <summary>设置 ColumnHeaderRegion.get_RowCount() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimColumnHeaderRegion.RowIndexGet">
            <summary>设置 ColumnHeaderRegion.get_RowIndex() 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Region.Fakes.ShimColumnHeaderRegion.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimColumnHeaderRegion.AllInstances.CalulateNodes">
            <summary>设置 ColumnHeaderRegion.CalulateNodes() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimColumnHeaderRegion.AllInstances.ColumnCountGet">
            <summary>设置 ColumnHeaderRegion.get_ColumnCount() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimColumnHeaderRegion.AllInstances.ColumnIndexGet">
            <summary>设置 ColumnHeaderRegion.get_ColumnIndex() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimColumnHeaderRegion.AllInstances.RowCountGet">
            <summary>设置 ColumnHeaderRegion.get_RowCount() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimColumnHeaderRegion.AllInstances.RowIndexGet">
            <summary>设置 ColumnHeaderRegion.get_RowIndex() 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Region.Fakes.ShimCornerRegion">
            <summary>ExportIO.Export.Entity.Region.CornerRegion 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.ShimCornerRegion.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.ShimCornerRegion.#ctor(ExportIO.Export.Entity.Region.CornerRegion)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.ShimCornerRegion.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.ShimCornerRegion.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.ShimCornerRegion.Bind(ExportIO.Export.Entity.IRuleEntity)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimCornerRegion.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimCornerRegion.CalulateNodes">
            <summary>设置 CornerRegion.CalulateNodes() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimCornerRegion.ColumnCountGet">
            <summary>设置 CornerRegion.get_ColumnCount() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimCornerRegion.ColumnIndexGet">
            <summary>设置 CornerRegion.get_ColumnIndex() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimCornerRegion.ConstructorRegionTable">
            <summary>设置 CornerRegion.CornerRegion(RegionTable table) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimCornerRegion.RowCountGet">
            <summary>设置 CornerRegion.get_RowCount() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimCornerRegion.RowIndexGet">
            <summary>设置 CornerRegion.get_RowIndex() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimCornerRegion.ToString">
            <summary>设置 CornerRegion.ToString() 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Region.Fakes.ShimCornerRegion.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimCornerRegion.AllInstances.CalulateNodes">
            <summary>设置 CornerRegion.CalulateNodes() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimCornerRegion.AllInstances.ColumnCountGet">
            <summary>设置 CornerRegion.get_ColumnCount() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimCornerRegion.AllInstances.ColumnIndexGet">
            <summary>设置 CornerRegion.get_ColumnIndex() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimCornerRegion.AllInstances.RowCountGet">
            <summary>设置 CornerRegion.get_RowCount() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimCornerRegion.AllInstances.RowIndexGet">
            <summary>设置 CornerRegion.get_RowIndex() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimCornerRegion.AllInstances.ToString01">
            <summary>设置 CornerRegion.ToString() 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Region.Fakes.ShimHeaderRegion">
            <summary>ExportIO.Export.Entity.Region.HeaderRegion 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.ShimHeaderRegion.#ctor(ExportIO.Export.Entity.Region.HeaderRegion)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.ShimHeaderRegion.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.ShimHeaderRegion.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.ShimHeaderRegion.Bind(ExportIO.Export.Entity.IRuleEntity)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimHeaderRegion.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimHeaderRegion.Constructor">
            <summary>设置 HeaderRegion.HeaderRegion() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimHeaderRegion.ConstructorRegionTable">
            <summary>设置 HeaderRegion.HeaderRegion(RegionTable table) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimHeaderRegion.GetHeaderContent">
            <summary>设置 HeaderRegion.GetHeaderContent() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimHeaderRegion.GetHeaderLevel">
            <summary>设置 HeaderRegion.GetHeaderLevel() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimHeaderRegion.NewHeaderRegionRegionTableBoolean">
            <summary>设置 HeaderRegion.NewHeaderRegion(RegionTable table, Boolean isRow) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimHeaderRegion.ToString">
            <summary>设置 HeaderRegion.ToString() 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Region.Fakes.ShimHeaderRegion.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimHeaderRegion.AllInstances.GetHeaderContent">
            <summary>设置 HeaderRegion.GetHeaderContent() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimHeaderRegion.AllInstances.GetHeaderLevel">
            <summary>设置 HeaderRegion.GetHeaderLevel() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimHeaderRegion.AllInstances.NewHeaderRegionRegionTableBoolean">
            <summary>设置 HeaderRegion.NewHeaderRegion(RegionTable table, Boolean isRow) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimHeaderRegion.AllInstances.ToString01">
            <summary>设置 HeaderRegion.ToString() 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Region.Fakes.ShimRegion">
            <summary>ExportIO.Export.Entity.Region.Region 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.ShimRegion.#ctor(ExportIO.Export.Entity.Region.Region)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.ShimRegion.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.ShimRegion.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.ShimRegion.Bind(ExportIO.Export.Entity.IRuleEntity)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimRegion.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimRegion.Constructor">
            <summary>设置 Region.Region() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimRegion.GetLocationBoolean">
            <summary>设置 Region.GetLocation(Boolean reset) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimRegion.GetNodesBoolean">
            <summary>设置 Region.GetNodes(Boolean reset) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Region.Fakes.ShimRegion.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimRegion.AllInstances.GetLocationBoolean">
            <summary>设置 Region.GetLocation(Boolean reset) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimRegion.AllInstances.GetNodesBoolean">
            <summary>设置 Region.GetNodes(Boolean reset) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Region.Fakes.ShimRegionTable">
            <summary>ExportIO.Export.Entity.Region.RegionTable 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.ShimRegionTable.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.ShimRegionTable.#ctor(ExportIO.Export.Entity.Region.RegionTable)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.ShimRegionTable.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.ShimRegionTable.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.ShimRegionTable.Bind(ExportIO.Export.Entity.IRuleEntity)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.ShimRegionTable.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimRegionTable.AddRegionRegion">
            <summary>设置 RegionTable.AddRegion(Region region) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimRegionTable.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimRegionTable.Clone">
            <summary>设置 RegionTable.Clone() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimRegionTable.ColCountGet">
            <summary>设置 RegionTable.get_ColCount() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimRegionTable.ColumnHeaderLevelGet">
            <summary>设置 RegionTable.get_ColumnHeaderLevel() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimRegionTable.ConstructorProductRuleBaseContainerLocation">
            <summary>设置 RegionTable.RegionTable(ProductRule productRule, BaseContainer container, Location location) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimRegionTable.CopyFillGet">
            <summary>设置 RegionTable.get_CopyFill() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimRegionTable.GetNodes">
            <summary>设置 RegionTable.GetNodes() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimRegionTable.GetRegionRegionType">
            <summary>设置 RegionTable.GetRegion(RegionType type) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimRegionTable.LinkRegionSource">
            <summary>设置 RegionTable.LinkRegionSource() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimRegionTable.RowCountGet">
            <summary>设置 RegionTable.get_RowCount() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimRegionTable.RowHeaderLevelGet">
            <summary>设置 RegionTable.get_RowHeaderLevel() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimRegionTable.TempleteRowsGet">
            <summary>设置 RegionTable.get_TempleteRows() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimRegionTable.ToString">
            <summary>设置 RegionTable.ToString() 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Region.Fakes.ShimRegionTable.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimRegionTable.AllInstances.AddRegionRegion">
            <summary>设置 RegionTable.AddRegion(Region region) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimRegionTable.AllInstances.Clone">
            <summary>设置 RegionTable.Clone() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimRegionTable.AllInstances.ColCountGet">
            <summary>设置 RegionTable.get_ColCount() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimRegionTable.AllInstances.ColumnHeaderLevelGet">
            <summary>设置 RegionTable.get_ColumnHeaderLevel() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimRegionTable.AllInstances.CopyFillGet">
            <summary>设置 RegionTable.get_CopyFill() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimRegionTable.AllInstances.GetNodes">
            <summary>设置 RegionTable.GetNodes() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimRegionTable.AllInstances.GetRegionRegionType">
            <summary>设置 RegionTable.GetRegion(RegionType type) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimRegionTable.AllInstances.LinkRegionSource">
            <summary>设置 RegionTable.LinkRegionSource() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimRegionTable.AllInstances.RowCountGet">
            <summary>设置 RegionTable.get_RowCount() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimRegionTable.AllInstances.RowHeaderLevelGet">
            <summary>设置 RegionTable.get_RowHeaderLevel() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimRegionTable.AllInstances.TempleteRowsGet">
            <summary>设置 RegionTable.get_TempleteRows() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimRegionTable.AllInstances.ToString01">
            <summary>设置 RegionTable.ToString() 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Region.Fakes.ShimRowHeaderRegion">
            <summary>ExportIO.Export.Entity.Region.RowHeaderRegion 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.ShimRowHeaderRegion.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.ShimRowHeaderRegion.#ctor(ExportIO.Export.Entity.Region.RowHeaderRegion)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.ShimRowHeaderRegion.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.ShimRowHeaderRegion.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.ShimRowHeaderRegion.Bind(ExportIO.Export.Entity.IRuleEntity)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimRowHeaderRegion.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimRowHeaderRegion.CalulateNodes">
            <summary>设置 RowHeaderRegion.CalulateNodes() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimRowHeaderRegion.ColumnCountGet">
            <summary>设置 RowHeaderRegion.get_ColumnCount() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimRowHeaderRegion.ColumnIndexGet">
            <summary>设置 RowHeaderRegion.get_ColumnIndex() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimRowHeaderRegion.ConstructorRegionTable">
            <summary>设置 RowHeaderRegion.RowHeaderRegion(RegionTable table) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimRowHeaderRegion.RowCountGet">
            <summary>设置 RowHeaderRegion.get_RowCount() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimRowHeaderRegion.RowIndexGet">
            <summary>设置 RowHeaderRegion.get_RowIndex() 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Region.Fakes.ShimRowHeaderRegion.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimRowHeaderRegion.AllInstances.CalulateNodes">
            <summary>设置 RowHeaderRegion.CalulateNodes() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimRowHeaderRegion.AllInstances.ColumnCountGet">
            <summary>设置 RowHeaderRegion.get_ColumnCount() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimRowHeaderRegion.AllInstances.ColumnIndexGet">
            <summary>设置 RowHeaderRegion.get_ColumnIndex() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimRowHeaderRegion.AllInstances.RowCountGet">
            <summary>设置 RowHeaderRegion.get_RowCount() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.ShimRowHeaderRegion.AllInstances.RowIndexGet">
            <summary>设置 RowHeaderRegion.get_RowIndex() 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Region.Fakes.StubBodyRegion">
            <summary>ExportIO.Export.Entity.Region.BodyRegion 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.StubBodyRegion.#ctor(ExportIO.Export.Entity.Region.RegionTable)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.StubBodyRegion.CalulateNodes">
            <summary>设置 BodyRegion.CalulateNodes() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Region.Fakes.StubBodyRegion.CalulateNodes01">
            <summary>设置 BodyRegion.CalulateNodes() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Region.Fakes.StubBodyRegion.ColumnCountGet">
            <summary>设置 BodyRegion.get_ColumnCount() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Region.Fakes.StubBodyRegion.ColumnIndexGet">
            <summary>设置 BodyRegion.get_ColumnIndex() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.StubBodyRegion.InitializeStub">
            <summary>初始化 type StubBodyRegion 的新实例</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Region.Fakes.StubBodyRegion.RowCountGet">
            <summary>设置 BodyRegion.get_RowCount() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Region.Fakes.StubBodyRegion.RowIndexGet">
            <summary>设置 BodyRegion.get_RowIndex() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.StubBodyRegion.ToString">
            <summary>设置 BodyRegion.ToString() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Region.Fakes.StubBodyRegion.ToString01">
            <summary>设置 BodyRegion.ToString() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubBodyRegion.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubBodyRegion.ColumnCount">
            <summary>设置 BodyRegion.get_ColumnCount() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubBodyRegion.ColumnIndex">
            <summary>设置 BodyRegion.get_ColumnIndex() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubBodyRegion.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubBodyRegion.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubBodyRegion.RowCount">
            <summary>设置 BodyRegion.get_RowCount() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubBodyRegion.RowIndex">
            <summary>设置 BodyRegion.get_RowIndex() 的 stub</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Region.Fakes.StubColumnHeaderRegion">
            <summary>ExportIO.Export.Entity.Region.ColumnHeaderRegion 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.StubColumnHeaderRegion.#ctor(ExportIO.Export.Entity.Region.RegionTable)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.StubColumnHeaderRegion.CalulateNodes">
            <summary>设置 ColumnHeaderRegion.CalulateNodes() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Region.Fakes.StubColumnHeaderRegion.CalulateNodes01">
            <summary>设置 ColumnHeaderRegion.CalulateNodes() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Region.Fakes.StubColumnHeaderRegion.ColumnCountGet">
            <summary>设置 ColumnHeaderRegion.get_ColumnCount() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Region.Fakes.StubColumnHeaderRegion.ColumnIndexGet">
            <summary>设置 ColumnHeaderRegion.get_ColumnIndex() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.StubColumnHeaderRegion.InitializeStub">
            <summary>初始化 type StubColumnHeaderRegion 的新实例</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Region.Fakes.StubColumnHeaderRegion.RowCountGet">
            <summary>设置 ColumnHeaderRegion.get_RowCount() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Region.Fakes.StubColumnHeaderRegion.RowIndexGet">
            <summary>设置 ColumnHeaderRegion.get_RowIndex() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.StubColumnHeaderRegion.ToString">
            <summary>设置 HeaderRegion.ToString() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Region.Fakes.StubColumnHeaderRegion.ToString01">
            <summary>设置 HeaderRegion.ToString() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubColumnHeaderRegion.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubColumnHeaderRegion.ColumnCount">
            <summary>设置 ColumnHeaderRegion.get_ColumnCount() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubColumnHeaderRegion.ColumnIndex">
            <summary>设置 ColumnHeaderRegion.get_ColumnIndex() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubColumnHeaderRegion.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubColumnHeaderRegion.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubColumnHeaderRegion.RowCount">
            <summary>设置 ColumnHeaderRegion.get_RowCount() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubColumnHeaderRegion.RowIndex">
            <summary>设置 ColumnHeaderRegion.get_RowIndex() 的 stub</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Region.Fakes.StubCornerRegion">
            <summary>ExportIO.Export.Entity.Region.CornerRegion 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.StubCornerRegion.#ctor(ExportIO.Export.Entity.Region.RegionTable)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.StubCornerRegion.CalulateNodes">
            <summary>设置 CornerRegion.CalulateNodes() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Region.Fakes.StubCornerRegion.CalulateNodes01">
            <summary>设置 CornerRegion.CalulateNodes() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Region.Fakes.StubCornerRegion.ColumnCountGet">
            <summary>设置 CornerRegion.get_ColumnCount() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Region.Fakes.StubCornerRegion.ColumnIndexGet">
            <summary>设置 CornerRegion.get_ColumnIndex() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.StubCornerRegion.InitializeStub">
            <summary>初始化 type StubCornerRegion 的新实例</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Region.Fakes.StubCornerRegion.RowCountGet">
            <summary>设置 CornerRegion.get_RowCount() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Region.Fakes.StubCornerRegion.RowIndexGet">
            <summary>设置 CornerRegion.get_RowIndex() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.StubCornerRegion.ToString">
            <summary>设置 CornerRegion.ToString() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Region.Fakes.StubCornerRegion.ToString01">
            <summary>设置 CornerRegion.ToString() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubCornerRegion.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubCornerRegion.ColumnCount">
            <summary>设置 CornerRegion.get_ColumnCount() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubCornerRegion.ColumnIndex">
            <summary>设置 CornerRegion.get_ColumnIndex() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubCornerRegion.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubCornerRegion.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubCornerRegion.RowCount">
            <summary>设置 CornerRegion.get_RowCount() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubCornerRegion.RowIndex">
            <summary>设置 CornerRegion.get_RowIndex() 的 stub</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Region.Fakes.StubHeaderRegion">
            <summary>ExportIO.Export.Entity.Region.HeaderRegion 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.StubHeaderRegion.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.StubHeaderRegion.#ctor(ExportIO.Export.Entity.Region.RegionTable)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.StubHeaderRegion.CalulateNodes">
            <summary>设置 HeaderRegion.CalulateNodes() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Region.Fakes.StubHeaderRegion.CalulateNodes01">
            <summary>设置 HeaderRegion.CalulateNodes() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Region.Fakes.StubHeaderRegion.ColumnCountGet">
            <summary>设置 HeaderRegion.get_ColumnCount() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Region.Fakes.StubHeaderRegion.ColumnIndexGet">
            <summary>设置 HeaderRegion.get_ColumnIndex() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.StubHeaderRegion.InitializeStub">
            <summary>初始化 type StubHeaderRegion 的新实例</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Region.Fakes.StubHeaderRegion.RowCountGet">
            <summary>设置 HeaderRegion.get_RowCount() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Region.Fakes.StubHeaderRegion.RowIndexGet">
            <summary>设置 HeaderRegion.get_RowIndex() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.StubHeaderRegion.ToString">
            <summary>设置 HeaderRegion.ToString() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Region.Fakes.StubHeaderRegion.ToString01">
            <summary>设置 HeaderRegion.ToString() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubHeaderRegion.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubHeaderRegion.ColumnCount">
            <summary>设置 HeaderRegion.get_ColumnCount() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubHeaderRegion.ColumnIndex">
            <summary>设置 HeaderRegion.get_ColumnIndex() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubHeaderRegion.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubHeaderRegion.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubHeaderRegion.RowCount">
            <summary>设置 HeaderRegion.get_RowCount() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubHeaderRegion.RowIndex">
            <summary>设置 HeaderRegion.get_RowIndex() 的 stub</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Region.Fakes.StubRegion">
            <summary>ExportIO.Export.Entity.Region.Region 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.StubRegion.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.StubRegion.CalulateNodes">
            <summary>设置 Region.CalulateNodes() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Region.Fakes.StubRegion.CalulateNodes01">
            <summary>设置 Region.CalulateNodes() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Region.Fakes.StubRegion.ColumnCountGet">
            <summary>设置 Region.get_ColumnCount() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Region.Fakes.StubRegion.ColumnIndexGet">
            <summary>设置 Region.get_ColumnIndex() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.StubRegion.InitializeStub">
            <summary>初始化 type StubRegion 的新实例</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Region.Fakes.StubRegion.RowCountGet">
            <summary>设置 Region.get_RowCount() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Region.Fakes.StubRegion.RowIndexGet">
            <summary>设置 Region.get_RowIndex() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubRegion.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubRegion.ColumnCount">
            <summary>设置 Region.get_ColumnCount() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubRegion.ColumnIndex">
            <summary>设置 Region.get_ColumnIndex() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubRegion.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubRegion.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubRegion.RowCount">
            <summary>设置 Region.get_RowCount() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubRegion.RowIndex">
            <summary>设置 Region.get_RowIndex() 的 stub</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Region.Fakes.StubRegionTable">
            <summary>ExportIO.Export.Entity.Region.RegionTable 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.StubRegionTable.#ctor(ExportIO.Export.Entity.ProductRule,ExportIO.Export.Entity.BaseContainer,ExportIO.Export.Entity.Location)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.StubRegionTable.Clone">
            <summary>设置 RegionTable.Clone() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Region.Fakes.StubRegionTable.Clone01">
            <summary>设置 RegionTable.Clone() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Region.Fakes.StubRegionTable.ColCountGet">
            <summary>设置 RegionTable.get_ColCount() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Region.Fakes.StubRegionTable.CopyFillGet">
            <summary>设置 RegionTable.get_CopyFill() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.StubRegionTable.GetNodes">
            <summary>设置 RegionTable.GetNodes() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Region.Fakes.StubRegionTable.GetNodes01">
            <summary>设置 RegionTable.GetNodes() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.StubRegionTable.IncreasedBefore(ExportIO.Export.Entity.BaseContainer)">
            <summary>设置 BaseContainer.IncreasedBefore(BaseContainer subObject) 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Region.Fakes.StubRegionTable.IncreasedBeforeBaseContainer">
            <summary>设置 BaseContainer.IncreasedBefore(BaseContainer subObject) 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Region.Fakes.StubRegionTable.IncreasedRowsGet">
            <summary>设置 BaseContainer.get_IncreasedRows() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.StubRegionTable.InitializeStub">
            <summary>初始化 type StubRegionTable 的新实例</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Region.Fakes.StubRegionTable.RowCountGet">
            <summary>设置 RegionTable.get_RowCount() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Region.Fakes.StubRegionTable.TempleteRowsGet">
            <summary>设置 RegionTable.get_TempleteRows() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.StubRegionTable.ToString">
            <summary>设置 RegionTable.ToString() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Region.Fakes.StubRegionTable.ToString01">
            <summary>设置 RegionTable.ToString() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubRegionTable.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubRegionTable.ColCount">
            <summary>设置 RegionTable.get_ColCount() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubRegionTable.CopyFill">
            <summary>设置 RegionTable.get_CopyFill() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubRegionTable.IncreasedRows">
            <summary>设置 BaseContainer.get_IncreasedRows() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubRegionTable.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubRegionTable.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubRegionTable.RowCount">
            <summary>设置 RegionTable.get_RowCount() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubRegionTable.TempleteRows">
            <summary>设置 RegionTable.get_TempleteRows() 的 stub</summary>
        </member>
        <member name="T:ExportIO.Export.Entity.Region.Fakes.StubRowHeaderRegion">
            <summary>ExportIO.Export.Entity.Region.RowHeaderRegion 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.StubRowHeaderRegion.#ctor(ExportIO.Export.Entity.Region.RegionTable)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.StubRowHeaderRegion.CalulateNodes">
            <summary>设置 RowHeaderRegion.CalulateNodes() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Region.Fakes.StubRowHeaderRegion.CalulateNodes01">
            <summary>设置 RowHeaderRegion.CalulateNodes() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Region.Fakes.StubRowHeaderRegion.ColumnCountGet">
            <summary>设置 RowHeaderRegion.get_ColumnCount() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Region.Fakes.StubRowHeaderRegion.ColumnIndexGet">
            <summary>设置 RowHeaderRegion.get_ColumnIndex() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.StubRowHeaderRegion.InitializeStub">
            <summary>初始化 type StubRowHeaderRegion 的新实例</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Region.Fakes.StubRowHeaderRegion.RowCountGet">
            <summary>设置 RowHeaderRegion.get_RowCount() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Region.Fakes.StubRowHeaderRegion.RowIndexGet">
            <summary>设置 RowHeaderRegion.get_RowIndex() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Entity.Region.Fakes.StubRowHeaderRegion.ToString">
            <summary>设置 HeaderRegion.ToString() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Entity.Region.Fakes.StubRowHeaderRegion.ToString01">
            <summary>设置 HeaderRegion.ToString() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubRowHeaderRegion.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubRowHeaderRegion.ColumnCount">
            <summary>设置 RowHeaderRegion.get_ColumnCount() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubRowHeaderRegion.ColumnIndex">
            <summary>设置 RowHeaderRegion.get_ColumnIndex() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubRowHeaderRegion.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubRowHeaderRegion.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubRowHeaderRegion.RowCount">
            <summary>设置 RowHeaderRegion.get_RowCount() 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Entity.Region.Fakes.StubRowHeaderRegion.RowIndex">
            <summary>设置 RowHeaderRegion.get_RowIndex() 的 stub</summary>
        </member>
        <member name="T:ExportIO.Export.Fakes.ShimExportMain">
            <summary>ExportIO.Export.ExportMain 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Fakes.ShimExportMain.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Fakes.ShimExportMain.#ctor(ExportIO.Export.ExportMain)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Fakes.ShimExportMain.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Fakes.ShimExportMain.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimExportMain.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimExportMain.Constructor">
            <summary>设置 ExportMain.ExportMain() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimExportMain.ExportDataSetString">
            <summary>设置 ExportMain.Export(DataSet dataSet, String exportfile) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimExportMain.ExportForBSDataSetStream">
            <summary>设置 ExportMain.ExportForBS(DataSet dataSet, Stream stream) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimExportMain.GetExportConfigBoolean">
            <summary>设置 ExportMain.GetExportConfig(Boolean reload) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimExportMain.GetProductDescription">
            <summary>设置 ExportMain.GetProductDescription() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimExportMain.GetProductList">
            <summary>设置 ExportMain.GetProductList() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimExportMain.GetProductRuleStringBoolean">
            <summary>设置 ExportMain.GetProductRule(String ruleName, Boolean createNew) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimExportMain.MatchExcelVersionProductRuleStringRef">
            <summary>设置 ExportMain.MatchExcelVersion(ProductRule productRule, String&amp; exportfile) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimExportMain.ReloadConfig">
            <summary>设置 ExportMain.ReloadConfig() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimExportMain.StaticConstructor">
            <summary>设置 ExportMain.ExportMain() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimExportMain._GetProductListb__0ProductRule">
            <summary>设置 ExportMain.&lt;GetProductList&gt;b__0(ProductRule p) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimExportMain.test">
            <summary>设置 ExportMain.test() 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Fakes.ShimExportMain.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimExportMain.AllInstances.ReloadConfig">
            <summary>设置 ExportMain.ReloadConfig() 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Fakes.ShimExportTest">
            <summary>ExportIO.Export.ExportTest 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Fakes.ShimExportTest.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Fakes.ShimExportTest.#ctor(ExportIO.Export.ExportTest)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Fakes.ShimExportTest.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Fakes.ShimExportTest.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimExportTest.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimExportTest.Constructor">
            <summary>设置 ExportTest.ExportTest() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimExportTest.Get3ConfigReq">
            <summary>设置 ExportTest.Get3ConfigReq() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimExportTest.Get4Line3Config">
            <summary>设置 ExportTest.Get4Line3Config() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimExportTest.GetBusinessCategory">
            <summary>设置 ExportTest.GetBusinessCategory() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimExportTest.GetBusinessMainFlow">
            <summary>设置 ExportTest.GetBusinessMainFlow() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimExportTest.GetDataSetString">
            <summary>设置 ExportTest.GetDataSet(String type) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimExportTest.GetFunctionList">
            <summary>设置 ExportTest.GetFunctionList() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimExportTest.GetOrganization">
            <summary>设置 ExportTest.GetOrganization() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimExportTest.GetReport">
            <summary>设置 ExportTest.GetReport() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimExportTest.GetTestData">
            <summary>设置 ExportTest.GetTestData() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimExportTest.StaticConstructor">
            <summary>设置 ExportTest.ExportTest() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimExportTest.Test2StringString">
            <summary>设置 ExportTest.Test2(String productTypeName, String exportfile) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimExportTest.TestStringString">
            <summary>设置 ExportTest.Test(String exportfile, String productTypeName) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimExportTest._GetFunctionListb__0DataRow">
            <summary>设置 ExportTest.&lt;GetFunctionList&gt;b__0(DataRow p) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Fakes.ShimExportTest.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Fakes.ShimFormProduct">
            <summary>ExportIO.Export.FormProduct 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Fakes.ShimFormProduct.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Fakes.ShimFormProduct.#ctor(ExportIO.Export.FormProduct)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Fakes.ShimFormProduct.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Fakes.ShimFormProduct.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Fakes.ShimFormProduct.Bind(ExportIO.Export.IProductData)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimFormProduct.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimFormProduct.Constructor">
            <summary>设置 FormProduct.FormProduct() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimFormProduct.GetAllData">
            <summary>设置 FormProduct.GetAllData() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimFormProduct.GetDataObjectArray">
            <summary>设置 FormProduct.GetData(Object[] objects) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Fakes.ShimFormProduct.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimFormProduct.AllInstances.GetAllData">
            <summary>设置 FormProduct.GetAllData() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimFormProduct.AllInstances.GetDataObjectArray">
            <summary>设置 FormProduct.GetData(Object[] objects) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Fakes.ShimFuncListProduct">
            <summary>ExportIO.Export.FuncListProduct 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Fakes.ShimFuncListProduct.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Fakes.ShimFuncListProduct.#ctor(ExportIO.Export.FuncListProduct)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Fakes.ShimFuncListProduct.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Fakes.ShimFuncListProduct.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Fakes.ShimFuncListProduct.Bind(ExportIO.Export.IProductData)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimFuncListProduct.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimFuncListProduct.Constructor">
            <summary>设置 FuncListProduct.FuncListProduct() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimFuncListProduct.GetAllData">
            <summary>设置 FuncListProduct.GetAllData() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimFuncListProduct.GetDataObjectArray">
            <summary>设置 FuncListProduct.GetData(Object[] objects) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Fakes.ShimFuncListProduct.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimFuncListProduct.AllInstances.GetAllData">
            <summary>设置 FuncListProduct.GetAllData() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimFuncListProduct.AllInstances.GetDataObjectArray">
            <summary>设置 FuncListProduct.GetData(Object[] objects) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Fakes.ShimMyExtention">
            <summary>ExportIO.Export.MyExtention 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Fakes.ShimMyExtention.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Fakes.ShimMyExtention.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Fakes.ShimMyExtention.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Fakes.ShimMyExtention.CloneOf1IListOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{``0},System.Collections.Generic.List{``0}})">
            <summary>设置 MyExtention.Clone(IList`1&lt;!!0&gt; list) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimMyExtention.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:ExportIO.Export.Fakes.ShimProductDataFactory">
            <summary>ExportIO.Export.ProductDataFactory 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Fakes.ShimProductDataFactory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Fakes.ShimProductDataFactory.#ctor(ExportIO.Export.ProductDataFactory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Fakes.ShimProductDataFactory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Fakes.ShimProductDataFactory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimProductDataFactory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimProductDataFactory.Constructor">
            <summary>设置 ProductDataFactory.ProductDataFactory() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimProductDataFactory.GetAllDataString">
            <summary>设置 ProductDataFactory.GetAllData(String productName) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimProductDataFactory.GetDataStringObjectArray">
            <summary>设置 ProductDataFactory.GetData(String productName, Object[] objects) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimProductDataFactory.RegisterStringIProductData">
            <summary>设置 ProductDataFactory.Register(String productName, IProductData productData) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimProductDataFactory.RegisterStringOneClassProductDataDelegate">
            <summary>设置 ProductDataFactory.Register(String productName, OneClassProductDataDelegate productDataDelegate) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimProductDataFactory.RegisterStringOneProductDataDelegate">
            <summary>设置 ProductDataFactory.Register(String productName, OneProductDataDelegate productDataDelegate) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimProductDataFactory.StaticConstructor">
            <summary>设置 ProductDataFactory.ProductDataFactory() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimProductDataFactory.test">
            <summary>设置 ProductDataFactory.test() 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Fakes.ShimProductDataFactory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.ShimProductDataFactory.AllInstances.test">
            <summary>设置 ProductDataFactory.test() 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Fakes.StubExportMain">
            <summary>ExportIO.Export.ExportMain 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Fakes.StubExportMain.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Fakes.StubExportMain.InitializeStub">
            <summary>初始化 type StubExportMain 的新实例</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.StubExportMain.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.StubExportMain.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.StubExportMain.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Fakes.StubExportTest">
            <summary>ExportIO.Export.ExportTest 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Fakes.StubExportTest.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Fakes.StubExportTest.InitializeStub">
            <summary>初始化 type StubExportTest 的新实例</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.StubExportTest.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.StubExportTest.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.StubExportTest.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Fakes.StubFormProduct">
            <summary>ExportIO.Export.FormProduct 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Fakes.StubFormProduct.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Fakes.StubFormProduct.InitializeStub">
            <summary>初始化 type StubFormProduct 的新实例</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.StubFormProduct.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.StubFormProduct.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.StubFormProduct.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Fakes.StubFuncListProduct">
            <summary>ExportIO.Export.FuncListProduct 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Fakes.StubFuncListProduct.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Fakes.StubFuncListProduct.InitializeStub">
            <summary>初始化 type StubFuncListProduct 的新实例</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.StubFuncListProduct.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.StubFuncListProduct.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.StubFuncListProduct.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Fakes.StubIProductData">
            <summary>ExportIO.Export.IProductData 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Fakes.StubIProductData.#ctor">
            <summary>初始化 type StubIProductData 的新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Fakes.StubIProductData.ec::ExportIO#Export#IProductData#GetAllData">
            <summary>设置 IProductData.GetAllData() 的 存根</summary>
        </member>
        <member name="M:ExportIO.Export.Fakes.StubIProductData.ec::ExportIO#Export#IProductData#GetData(System.Object[])">
            <summary>设置 IProductData.GetData(Object[] objects) 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Fakes.StubIProductData.GetAllData">
            <summary>设置 IProductData.GetAllData() 的 stub</summary>
        </member>
        <member name="F:ExportIO.Export.Fakes.StubIProductData.GetDataObjectArray">
            <summary>设置 IProductData.GetData(Object[] objects) 的 stub</summary>
        </member>
        <member name="T:ExportIO.Export.Fakes.StubProductDataFactory">
            <summary>ExportIO.Export.ProductDataFactory 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Fakes.StubProductDataFactory.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Fakes.StubProductDataFactory.InitializeStub">
            <summary>初始化 type StubProductDataFactory 的新实例</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.StubProductDataFactory.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.StubProductDataFactory.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Fakes.StubProductDataFactory.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Util.Fakes.ShimNPOIExcelUtil">
            <summary>ExportIO.Export.Util.NPOIExcelUtil 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Util.Fakes.ShimNPOIExcelUtil.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Util.Fakes.ShimNPOIExcelUtil.#ctor(ExportIO.Export.Util.NPOIExcelUtil)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Util.Fakes.ShimNPOIExcelUtil.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Util.Fakes.ShimNPOIExcelUtil.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ExportIO.Export.Util.Fakes.ShimNPOIExcelUtil.AddCommentICellStringString">
            <summary>设置 NPOIExcelUtil.AddComment(ICell exCell, String commentAuthor, String commentContent) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Util.Fakes.ShimNPOIExcelUtil.AddDropDownListISheetStringArrayInt32Int32Int32Int32">
            <summary>设置 NPOIExcelUtil.AddDropDownList(ISheet exSheet, String[] values, Int32 colIndex, Int32 rowIndex, Int32 colSpan, Int32 rowSpan) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Util.Fakes.ShimNPOIExcelUtil.AddHyperLinkICellHyperlinkTypeString">
            <summary>设置 NPOIExcelUtil.AddHyperLink(ICell exCell, HyperlinkType linkType, String addr) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Util.Fakes.ShimNPOIExcelUtil.AutoFitColumnWidthISheetInt32Int32Int32">
            <summary>设置 NPOIExcelUtil.AutoFitColumnWidth(ISheet sheet, Int32 colIndex, Int32 beginRow, Int32 endRow) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Util.Fakes.ShimNPOIExcelUtil.AutoFitRowHeightISheetInt32Int32Int32">
            <summary>设置 NPOIExcelUtil.AutoFitRowHeight(ISheet sheet, Int32 rowIndex, Int32 beginCol, Int32 endCol) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Util.Fakes.ShimNPOIExcelUtil.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Util.Fakes.ShimNPOIExcelUtil.Constructor">
            <summary>设置 NPOIExcelUtil.NPOIExcelUtil() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Util.Fakes.ShimNPOIExcelUtil.CopyCellISheetICellInt32Int32">
            <summary>设置 NPOIExcelUtil.CopyCell(ISheet sheet, ICell cell, Int32 targetColIndex, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Util.Fakes.ShimNPOIExcelUtil.CopyFormulaICellICell">
            <summary>设置 NPOIExcelUtil.CopyFormula(ICell sourceCell, ICell targetCell) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Util.Fakes.ShimNPOIExcelUtil.CopyFormulaIRowInt32Int32">
            <summary>设置 NPOIExcelUtil.CopyFormula(IRow sourceRow, Int32 targetIndex, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Util.Fakes.ShimNPOIExcelUtil.CopyRowByOriginalWayISheetInt32Int32Int32Boolean">
            <summary>设置 NPOIExcelUtil.CopyRowByOriginalWay(ISheet sheet, Int32 sourceIndex, Int32 targetIndex, Int32 count, Boolean dataIncluded) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Util.Fakes.ShimNPOIExcelUtil.CopyRowISheetInt32Int32Int32Boolean">
            <summary>设置 NPOIExcelUtil.CopyRow(ISheet sheet, Int32 sourceIndex, Int32 targetIndex, Int32 count, Boolean dataIncluded) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Util.Fakes.ShimNPOIExcelUtil.CreateCellStyleIWorkbookInt16Int16HorizontalAlignmentVerticalAlignmentBorderStyle">
            <summary>设置 NPOIExcelUtil.CreateCellStyle(IWorkbook workbook, Int16 backColor, Int16 foreColor, HorizontalAlignment hAlign, VerticalAlignment vAlign, BorderStyle boderStyle) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Util.Fakes.ShimNPOIExcelUtil.CreateFontIWorkbookStringInt16Int16BooleanBooleanFontUnderlineType">
            <summary>设置 NPOIExcelUtil.CreateFont(IWorkbook workbook, String fontName, Int16 color, Int16 fontSize, Boolean isItalic, Boolean isStrikeOut, FontUnderlineType underline) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Util.Fakes.ShimNPOIExcelUtil.FormulaCopyStringInt32Int32">
            <summary>设置 NPOIExcelUtil.FormulaCopy(String formula, Int32 rowOffset, Int32 colOffset) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Util.Fakes.ShimNPOIExcelUtil.FreezeISheetInt32Int32">
            <summary>设置 NPOIExcelUtil.Freeze(ISheet sheet, Int32 rowIndex, Int32 colIndex) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Util.Fakes.ShimNPOIExcelUtil.GetLinkTypeByDataString">
            <summary>设置 NPOIExcelUtil.GetLinkTypeByData(String linkAddr) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Util.Fakes.ShimNPOIExcelUtil.GetRangeBetweenRowsISheetInt32Int32">
            <summary>设置 NPOIExcelUtil.GetRangeBetweenRows(ISheet sheet, Int32 sourceIndex, Int32 targetIndex) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Util.Fakes.ShimNPOIExcelUtil.GetRangeICell">
            <summary>设置 NPOIExcelUtil.GetRange(ICell cell) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Util.Fakes.ShimNPOIExcelUtil.MergeRowsByCellDataISheetInt32Int32Int32Int32">
            <summary>设置 NPOIExcelUtil.MergeRowsByCellData(ISheet exSheet, Int32 rowIndex, Int32 rowCount, Int32 colIndex, Int32 mergedColumns) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Util.Fakes.ShimNPOIExcelUtil.MergeRowsByDataDataTableFieldISheetInt32Int32">
            <summary>设置 NPOIExcelUtil.MergeRowsByData(DataTable dataTable, Field field, ISheet exSheet, Int32 rowIndexBase, Int32 rowCount) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Util.Fakes.ShimNPOIExcelUtil.SetAreaBorderISheetInt32Int32Int32Int32">
            <summary>设置 NPOIExcelUtil.SetAreaBorder(ISheet sheet, Int32 rowIndex, Int32 colIndex, Int32 rowCount, Int32 colCount) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Util.Fakes.ShimNPOIExcelUtil.SetCellValueByCellTypeICellObject">
            <summary>设置 NPOIExcelUtil.SetCellValueByCellType(ICell exCell, Object tmpObject) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Util.Fakes.ShimNPOIExcelUtil.SetCellValueByDataTypeICellObject">
            <summary>设置 NPOIExcelUtil.SetCellValueByDataType(ICell exCell, Object tmpObject) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Util.Fakes.ShimNPOIExcelUtil.SetCellValueICellFieldObject">
            <summary>设置 NPOIExcelUtil.SetCellValue(ICell exCell, Field field, Object value) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Util.Fakes.ShimNPOIExcelUtil._AutoFitRowHeightb__4String">
            <summary>设置 NPOIExcelUtil.&lt;AutoFitRowHeight&gt;b__4(String p) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Util.Fakes.ShimNPOIExcelUtil.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Util.Fakes.ShimParseUtil">
            <summary>ExportIO.Export.Util.ParseUtil 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Util.Fakes.ShimParseUtil.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Util.Fakes.ShimParseUtil.#ctor(ExportIO.Export.Util.ParseUtil)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Util.Fakes.ShimParseUtil.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Util.Fakes.ShimParseUtil.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Util.Fakes.ShimParseUtil.ParseEnumOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,``0})">
            <summary>设置 ParseUtil.ParseEnum(String str, !!0 defValue) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Util.Fakes.ShimParseUtil.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Util.Fakes.ShimParseUtil.Constructor">
            <summary>设置 ParseUtil.ParseUtil() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Util.Fakes.ShimParseUtil.FromBase26String">
            <summary>设置 ParseUtil.FromBase26(String str) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Util.Fakes.ShimParseUtil.IfNullOrEmptyStringString">
            <summary>设置 ParseUtil.IfNullOrEmpty(String str, String valueIfNull) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Util.Fakes.ShimParseUtil.IsAlphabetsStringBoolean">
            <summary>设置 ParseUtil.IsAlphabets(String value, Boolean ignoreCase) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Util.Fakes.ShimParseUtil.IsNumericString">
            <summary>设置 ParseUtil.IsNumeric(String value) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Util.Fakes.ShimParseUtil.MatchStringStringRegexOptions">
            <summary>设置 ParseUtil.Match(String pattern, String value, RegexOptions options) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Util.Fakes.ShimParseUtil.ParseBooleanStringBoolean">
            <summary>设置 ParseUtil.ParseBoolean(String str, Boolean valueIfNull) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Util.Fakes.ShimParseUtil.ParseColumnIndexStringInt32">
            <summary>设置 ParseUtil.ParseColumnIndex(String str, Int32 defValue) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Util.Fakes.ShimParseUtil.ParseIntStringInt32">
            <summary>设置 ParseUtil.ParseInt(String str, Int32 valueIfNullOrError) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Util.Fakes.ShimParseUtil.ToBase26Int32">
            <summary>设置 ParseUtil.ToBase26(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Util.Fakes.ShimParseUtil.ToIntegerStringInt32">
            <summary>设置 ParseUtil.ToInteger(String value, Int32 errorValue) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Util.Fakes.ShimParseUtil.test">
            <summary>设置 ParseUtil.test() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Util.Fakes.ShimParseUtil.test2">
            <summary>设置 ParseUtil.test2() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Util.Fakes.ShimParseUtil.test3">
            <summary>设置 ParseUtil.test3() 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Util.Fakes.ShimParseUtil.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Util.Fakes.StubNPOIExcelUtil">
            <summary>ExportIO.Export.Util.NPOIExcelUtil 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Util.Fakes.StubNPOIExcelUtil.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Util.Fakes.StubNPOIExcelUtil.InitializeStub">
            <summary>初始化 type StubNPOIExcelUtil 的新实例</summary>
        </member>
        <member name="P:ExportIO.Export.Util.Fakes.StubNPOIExcelUtil.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Util.Fakes.StubNPOIExcelUtil.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Util.Fakes.StubNPOIExcelUtil.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Util.Fakes.StubParseUtil">
            <summary>ExportIO.Export.Util.ParseUtil 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Util.Fakes.StubParseUtil.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Util.Fakes.StubParseUtil.InitializeStub">
            <summary>初始化 type StubParseUtil 的新实例</summary>
        </member>
        <member name="P:ExportIO.Export.Util.Fakes.StubParseUtil.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Util.Fakes.StubParseUtil.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Util.Fakes.StubParseUtil.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.CellRender.Fakes.ShimCommentRender">
            <summary>ExportIO.Export.Writer.CellRender.CommentRender 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.CellRender.Fakes.ShimCommentRender.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.CellRender.Fakes.ShimCommentRender.#ctor(ExportIO.Export.Writer.CellRender.CommentRender)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.CellRender.Fakes.ShimCommentRender.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.CellRender.Fakes.ShimCommentRender.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.CellRender.Fakes.ShimCommentRender.Bind(ExportIO.Export.Writer.CellRender.ICellRender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.CellRender.Fakes.ShimCommentRender.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.CellRender.Fakes.ShimCommentRender.Constructor">
            <summary>设置 CommentRender.CommentRender() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.CellRender.Fakes.ShimCommentRender.RenderICell">
            <summary>设置 CommentRender.Render(ICell cell) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.CellRender.Fakes.ShimCommentRender.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.CellRender.Fakes.ShimCommentRender.AllInstances.RenderICell">
            <summary>设置 CommentRender.Render(ICell cell) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.CellRender.Fakes.ShimDropDownListRender">
            <summary>ExportIO.Export.Writer.CellRender.DropDownListRender 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.CellRender.Fakes.ShimDropDownListRender.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.CellRender.Fakes.ShimDropDownListRender.#ctor(ExportIO.Export.Writer.CellRender.DropDownListRender)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.CellRender.Fakes.ShimDropDownListRender.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.CellRender.Fakes.ShimDropDownListRender.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.CellRender.Fakes.ShimDropDownListRender.Bind(ExportIO.Export.Writer.CellRender.ICellRender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.CellRender.Fakes.ShimDropDownListRender.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.CellRender.Fakes.ShimDropDownListRender.Constructor">
            <summary>设置 DropDownListRender.DropDownListRender() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.CellRender.Fakes.ShimDropDownListRender.RenderICell">
            <summary>设置 DropDownListRender.Render(ICell cell) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.CellRender.Fakes.ShimDropDownListRender.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.CellRender.Fakes.ShimDropDownListRender.AllInstances.RenderICell">
            <summary>设置 DropDownListRender.Render(ICell cell) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.CellRender.Fakes.ShimHyperLinkRender">
            <summary>ExportIO.Export.Writer.CellRender.HyperLinkRender 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.CellRender.Fakes.ShimHyperLinkRender.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.CellRender.Fakes.ShimHyperLinkRender.#ctor(ExportIO.Export.Writer.CellRender.HyperLinkRender)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.CellRender.Fakes.ShimHyperLinkRender.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.CellRender.Fakes.ShimHyperLinkRender.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.CellRender.Fakes.ShimHyperLinkRender.Bind(ExportIO.Export.Writer.CellRender.ICellRender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.CellRender.Fakes.ShimHyperLinkRender.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.CellRender.Fakes.ShimHyperLinkRender.Constructor">
            <summary>设置 HyperLinkRender.HyperLinkRender() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.CellRender.Fakes.ShimHyperLinkRender.GetLinkTypeString">
            <summary>设置 HyperLinkRender.GetLinkType(String type) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.CellRender.Fakes.ShimHyperLinkRender.RenderICell">
            <summary>设置 HyperLinkRender.Render(ICell cell) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.CellRender.Fakes.ShimHyperLinkRender.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.CellRender.Fakes.ShimHyperLinkRender.AllInstances.GetLinkTypeString">
            <summary>设置 HyperLinkRender.GetLinkType(String type) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.CellRender.Fakes.ShimHyperLinkRender.AllInstances.RenderICell">
            <summary>设置 HyperLinkRender.Render(ICell cell) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.CellRender.Fakes.ShimPictureRender">
            <summary>ExportIO.Export.Writer.CellRender.PictureRender 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.CellRender.Fakes.ShimPictureRender.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.CellRender.Fakes.ShimPictureRender.#ctor(ExportIO.Export.Writer.CellRender.PictureRender)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.CellRender.Fakes.ShimPictureRender.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.CellRender.Fakes.ShimPictureRender.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.CellRender.Fakes.ShimPictureRender.Bind(ExportIO.Export.Writer.CellRender.ICellRender)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.CellRender.Fakes.ShimPictureRender.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.CellRender.Fakes.ShimPictureRender.Constructor">
            <summary>设置 PictureRender.PictureRender() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.CellRender.Fakes.ShimPictureRender.RenderICell">
            <summary>设置 PictureRender.Render(ICell cell) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.CellRender.Fakes.ShimPictureRender.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.CellRender.Fakes.ShimPictureRender.AllInstances.RenderICell">
            <summary>设置 PictureRender.Render(ICell cell) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.CellRender.Fakes.StubCommentRender">
            <summary>ExportIO.Export.Writer.CellRender.CommentRender 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.CellRender.Fakes.StubCommentRender.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.CellRender.Fakes.StubCommentRender.InitializeStub">
            <summary>初始化 type StubCommentRender 的新实例</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.CellRender.Fakes.StubCommentRender.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.CellRender.Fakes.StubCommentRender.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.CellRender.Fakes.StubCommentRender.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.CellRender.Fakes.StubDropDownListRender">
            <summary>ExportIO.Export.Writer.CellRender.DropDownListRender 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.CellRender.Fakes.StubDropDownListRender.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.CellRender.Fakes.StubDropDownListRender.InitializeStub">
            <summary>初始化 type StubDropDownListRender 的新实例</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.CellRender.Fakes.StubDropDownListRender.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.CellRender.Fakes.StubDropDownListRender.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.CellRender.Fakes.StubDropDownListRender.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.CellRender.Fakes.StubHyperLinkRender">
            <summary>ExportIO.Export.Writer.CellRender.HyperLinkRender 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.CellRender.Fakes.StubHyperLinkRender.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.CellRender.Fakes.StubHyperLinkRender.InitializeStub">
            <summary>初始化 type StubHyperLinkRender 的新实例</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.CellRender.Fakes.StubHyperLinkRender.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.CellRender.Fakes.StubHyperLinkRender.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.CellRender.Fakes.StubHyperLinkRender.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.CellRender.Fakes.StubICellRender">
            <summary>ExportIO.Export.Writer.CellRender.ICellRender 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.CellRender.Fakes.StubICellRender.#ctor">
            <summary>初始化 type StubICellRender 的新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.CellRender.Fakes.StubICellRender.ec::ExportIO#Export#Writer#CellRender#ICellRender#Render(NPOI.SS.UserModel.ICell)">
            <summary>设置 ICellRender.Render(ICell cell) 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Writer.CellRender.Fakes.StubICellRender.RenderICell">
            <summary>设置 ICellRender.Render(ICell cell) 的 stub</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.CellRender.Fakes.StubPictureRender">
            <summary>ExportIO.Export.Writer.CellRender.PictureRender 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.CellRender.Fakes.StubPictureRender.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.CellRender.Fakes.StubPictureRender.InitializeStub">
            <summary>初始化 type StubPictureRender 的新实例</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.CellRender.Fakes.StubPictureRender.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.CellRender.Fakes.StubPictureRender.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.CellRender.Fakes.StubPictureRender.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Convertor.Fakes.ShimAbstractValueSetter">
            <summary>ExportIO.Export.Writer.Convertor.AbstractValueSetter 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.ShimAbstractValueSetter.#ctor(ExportIO.Export.Writer.Convertor.AbstractValueSetter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.ShimAbstractValueSetter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.ShimAbstractValueSetter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.ShimAbstractValueSetter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.ShimAbstractValueSetter.Constructor">
            <summary>设置 AbstractValueSetter.AbstractValueSetter() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.ShimAbstractValueSetter.OnSetValueICellObject">
            <summary>设置 AbstractValueSetter.OnSetValue(ICell cell, Object source) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Convertor.Fakes.ShimAbstractValueSetter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.ShimAbstractValueSetter.AllInstances.OnSetValueICellObject">
            <summary>设置 AbstractValueSetter.OnSetValue(ICell cell, Object source) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Convertor.Fakes.ShimBooleanConvertor">
            <summary>ExportIO.Export.Writer.Convertor.BooleanConvertor 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.ShimBooleanConvertor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.ShimBooleanConvertor.#ctor(ExportIO.Export.Writer.Convertor.BooleanConvertor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.ShimBooleanConvertor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.ShimBooleanConvertor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.ShimBooleanConvertor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.ShimBooleanConvertor.ConstructorFuncOfObjectBoolean">
            <summary>设置 BooleanConvertor.BooleanConvertor(Func`2&lt;Object,Boolean&gt; func) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.ShimBooleanConvertor.SetValueICellObject">
            <summary>设置 BooleanConvertor.SetValue(ICell cell, Object source) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Convertor.Fakes.ShimBooleanConvertor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.ShimBooleanConvertor.AllInstances.SetValueICellObject">
            <summary>设置 BooleanConvertor.SetValue(ICell cell, Object source) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Convertor.Fakes.ShimDateTimeConvertor">
            <summary>ExportIO.Export.Writer.Convertor.DateTimeConvertor 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.ShimDateTimeConvertor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.ShimDateTimeConvertor.#ctor(ExportIO.Export.Writer.Convertor.DateTimeConvertor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.ShimDateTimeConvertor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.ShimDateTimeConvertor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.ShimDateTimeConvertor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.ShimDateTimeConvertor.ConstructorFuncOfObjectDateTimeString">
            <summary>设置 DateTimeConvertor.DateTimeConvertor(Func`2&lt;Object,DateTime&gt; func, String format) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.ShimDateTimeConvertor.SetValueICellObject">
            <summary>设置 DateTimeConvertor.SetValue(ICell cell, Object source) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Convertor.Fakes.ShimDateTimeConvertor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.ShimDateTimeConvertor.AllInstances.SetValueICellObject">
            <summary>设置 DateTimeConvertor.SetValue(ICell cell, Object source) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Convertor.Fakes.ShimErrorConvertor">
            <summary>ExportIO.Export.Writer.Convertor.ErrorConvertor 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.ShimErrorConvertor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.ShimErrorConvertor.#ctor(ExportIO.Export.Writer.Convertor.ErrorConvertor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.ShimErrorConvertor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.ShimErrorConvertor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.ShimErrorConvertor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.ShimErrorConvertor.ConstructorFuncOfObjectByte">
            <summary>设置 ErrorConvertor.ErrorConvertor(Func`2&lt;Object,Byte&gt; func) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.ShimErrorConvertor.SetValueICellObject">
            <summary>设置 ErrorConvertor.SetValue(ICell cell, Object source) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Convertor.Fakes.ShimErrorConvertor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.ShimErrorConvertor.AllInstances.SetValueICellObject">
            <summary>设置 ErrorConvertor.SetValue(ICell cell, Object source) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Convertor.Fakes.ShimFormulaConvertor">
            <summary>ExportIO.Export.Writer.Convertor.FormulaConvertor 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.ShimFormulaConvertor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.ShimFormulaConvertor.#ctor(ExportIO.Export.Writer.Convertor.FormulaConvertor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.ShimFormulaConvertor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.ShimFormulaConvertor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.ShimFormulaConvertor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.ShimFormulaConvertor.ConstructorFuncOfObjectStringBoolean">
            <summary>设置 FormulaConvertor.FormulaConvertor(Func`2&lt;Object,String&gt; func, Boolean keepFormula) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.ShimFormulaConvertor.SetValueICellObject">
            <summary>设置 FormulaConvertor.SetValue(ICell cell, Object source) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Convertor.Fakes.ShimFormulaConvertor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.ShimFormulaConvertor.AllInstances.SetValueICellObject">
            <summary>设置 FormulaConvertor.SetValue(ICell cell, Object source) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Convertor.Fakes.ShimNumericConvertor">
            <summary>ExportIO.Export.Writer.Convertor.NumericConvertor 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.ShimNumericConvertor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.ShimNumericConvertor.#ctor(ExportIO.Export.Writer.Convertor.NumericConvertor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.ShimNumericConvertor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.ShimNumericConvertor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.ShimNumericConvertor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.ShimNumericConvertor.ConstructorFuncOfObjectDoubleString">
            <summary>设置 NumericConvertor.NumericConvertor(Func`2&lt;Object,Double&gt; func, String format) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.ShimNumericConvertor.SetValueICellObject">
            <summary>设置 NumericConvertor.SetValue(ICell cell, Object source) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Convertor.Fakes.ShimNumericConvertor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.ShimNumericConvertor.AllInstances.SetValueICellObject">
            <summary>设置 NumericConvertor.SetValue(ICell cell, Object source) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Convertor.Fakes.ShimPictureConvertor">
            <summary>ExportIO.Export.Writer.Convertor.PictureConvertor 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.ShimPictureConvertor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.ShimPictureConvertor.#ctor(ExportIO.Export.Writer.Convertor.PictureConvertor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.ShimPictureConvertor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.ShimPictureConvertor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.ShimPictureConvertor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.ShimPictureConvertor.ConstructorFuncOfObjectByteArray">
            <summary>设置 PictureConvertor.PictureConvertor(Func`2&lt;Object,Byte[]&gt; func) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.ShimPictureConvertor.SetValueICellObject">
            <summary>设置 PictureConvertor.SetValue(ICell cell, Object source) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Convertor.Fakes.ShimPictureConvertor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.ShimPictureConvertor.AllInstances.SetValueICellObject">
            <summary>设置 PictureConvertor.SetValue(ICell cell, Object source) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Convertor.Fakes.ShimRichTextConvertor">
            <summary>ExportIO.Export.Writer.Convertor.RichTextConvertor 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.ShimRichTextConvertor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.ShimRichTextConvertor.#ctor(ExportIO.Export.Writer.Convertor.RichTextConvertor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.ShimRichTextConvertor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.ShimRichTextConvertor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.ShimRichTextConvertor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.ShimRichTextConvertor.ConstructorFuncOfObjectIRichTextString">
            <summary>设置 RichTextConvertor.RichTextConvertor(Func`2&lt;Object,IRichTextString&gt; func) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.ShimRichTextConvertor.SetValueICellObject">
            <summary>设置 RichTextConvertor.SetValue(ICell cell, Object source) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Convertor.Fakes.ShimRichTextConvertor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.ShimRichTextConvertor.AllInstances.SetValueICellObject">
            <summary>设置 RichTextConvertor.SetValue(ICell cell, Object source) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Convertor.Fakes.ShimTextConvertor">
            <summary>ExportIO.Export.Writer.Convertor.TextConvertor 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.ShimTextConvertor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.ShimTextConvertor.#ctor(ExportIO.Export.Writer.Convertor.TextConvertor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.ShimTextConvertor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.ShimTextConvertor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.ShimTextConvertor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.ShimTextConvertor.ConstructorFuncOfObjectString">
            <summary>设置 TextConvertor.TextConvertor(Func`2&lt;Object,String&gt; func) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.ShimTextConvertor.SetValueICellObject">
            <summary>设置 TextConvertor.SetValue(ICell cell, Object source) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Convertor.Fakes.ShimTextConvertor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.ShimTextConvertor.AllInstances.SetValueICellObject">
            <summary>设置 TextConvertor.SetValue(ICell cell, Object source) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Convertor.Fakes.StubAbstractValueSetter">
            <summary>ExportIO.Export.Writer.Convertor.AbstractValueSetter 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.StubAbstractValueSetter.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.StubAbstractValueSetter.InitializeStub">
            <summary>初始化 type StubAbstractValueSetter 的新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.StubAbstractValueSetter.SetValue(NPOI.SS.UserModel.ICell,System.Object)">
            <summary>设置 AbstractValueSetter.SetValue(ICell cell, Object source) 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Writer.Convertor.Fakes.StubAbstractValueSetter.SetValueICellObject">
            <summary>设置 AbstractValueSetter.SetValue(ICell cell, Object source) 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.StubAbstractValueSetter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.StubAbstractValueSetter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.StubAbstractValueSetter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Convertor.Fakes.StubBooleanConvertor">
            <summary>ExportIO.Export.Writer.Convertor.BooleanConvertor 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.StubBooleanConvertor.#ctor(System.Func{System.Object,System.Boolean})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.StubBooleanConvertor.InitializeStub">
            <summary>初始化 type StubBooleanConvertor 的新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.StubBooleanConvertor.SetValue(NPOI.SS.UserModel.ICell,System.Object)">
            <summary>设置 BooleanConvertor.SetValue(ICell cell, Object source) 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Writer.Convertor.Fakes.StubBooleanConvertor.SetValueICellObject">
            <summary>设置 BooleanConvertor.SetValue(ICell cell, Object source) 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.StubBooleanConvertor.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.StubBooleanConvertor.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.StubBooleanConvertor.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Convertor.Fakes.StubDateTimeConvertor">
            <summary>ExportIO.Export.Writer.Convertor.DateTimeConvertor 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.StubDateTimeConvertor.#ctor(System.Func{System.Object,System.DateTime},System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.StubDateTimeConvertor.InitializeStub">
            <summary>初始化 type StubDateTimeConvertor 的新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.StubDateTimeConvertor.SetValue(NPOI.SS.UserModel.ICell,System.Object)">
            <summary>设置 DateTimeConvertor.SetValue(ICell cell, Object source) 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Writer.Convertor.Fakes.StubDateTimeConvertor.SetValueICellObject">
            <summary>设置 DateTimeConvertor.SetValue(ICell cell, Object source) 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.StubDateTimeConvertor.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.StubDateTimeConvertor.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.StubDateTimeConvertor.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Convertor.Fakes.StubErrorConvertor">
            <summary>ExportIO.Export.Writer.Convertor.ErrorConvertor 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.StubErrorConvertor.#ctor(System.Func{System.Object,System.Byte})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.StubErrorConvertor.InitializeStub">
            <summary>初始化 type StubErrorConvertor 的新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.StubErrorConvertor.SetValue(NPOI.SS.UserModel.ICell,System.Object)">
            <summary>设置 ErrorConvertor.SetValue(ICell cell, Object source) 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Writer.Convertor.Fakes.StubErrorConvertor.SetValueICellObject">
            <summary>设置 ErrorConvertor.SetValue(ICell cell, Object source) 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.StubErrorConvertor.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.StubErrorConvertor.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.StubErrorConvertor.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Convertor.Fakes.StubFormulaConvertor">
            <summary>ExportIO.Export.Writer.Convertor.FormulaConvertor 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.StubFormulaConvertor.#ctor(System.Func{System.Object,System.String},System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.StubFormulaConvertor.InitializeStub">
            <summary>初始化 type StubFormulaConvertor 的新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.StubFormulaConvertor.SetValue(NPOI.SS.UserModel.ICell,System.Object)">
            <summary>设置 FormulaConvertor.SetValue(ICell cell, Object source) 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Writer.Convertor.Fakes.StubFormulaConvertor.SetValueICellObject">
            <summary>设置 FormulaConvertor.SetValue(ICell cell, Object source) 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.StubFormulaConvertor.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.StubFormulaConvertor.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.StubFormulaConvertor.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Convertor.Fakes.StubNumericConvertor">
            <summary>ExportIO.Export.Writer.Convertor.NumericConvertor 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.StubNumericConvertor.#ctor(System.Func{System.Object,System.Double},System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.StubNumericConvertor.InitializeStub">
            <summary>初始化 type StubNumericConvertor 的新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.StubNumericConvertor.SetValue(NPOI.SS.UserModel.ICell,System.Object)">
            <summary>设置 NumericConvertor.SetValue(ICell cell, Object source) 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Writer.Convertor.Fakes.StubNumericConvertor.SetValueICellObject">
            <summary>设置 NumericConvertor.SetValue(ICell cell, Object source) 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.StubNumericConvertor.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.StubNumericConvertor.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.StubNumericConvertor.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Convertor.Fakes.StubPictureConvertor">
            <summary>ExportIO.Export.Writer.Convertor.PictureConvertor 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.StubPictureConvertor.#ctor(System.Func{System.Object,System.Byte[]})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.StubPictureConvertor.InitializeStub">
            <summary>初始化 type StubPictureConvertor 的新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.StubPictureConvertor.SetValue(NPOI.SS.UserModel.ICell,System.Object)">
            <summary>设置 PictureConvertor.SetValue(ICell cell, Object source) 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Writer.Convertor.Fakes.StubPictureConvertor.SetValueICellObject">
            <summary>设置 PictureConvertor.SetValue(ICell cell, Object source) 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.StubPictureConvertor.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.StubPictureConvertor.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.StubPictureConvertor.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Convertor.Fakes.StubRichTextConvertor">
            <summary>ExportIO.Export.Writer.Convertor.RichTextConvertor 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.StubRichTextConvertor.#ctor(System.Func{System.Object,NPOI.SS.UserModel.IRichTextString})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.StubRichTextConvertor.InitializeStub">
            <summary>初始化 type StubRichTextConvertor 的新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.StubRichTextConvertor.SetValue(NPOI.SS.UserModel.ICell,System.Object)">
            <summary>设置 RichTextConvertor.SetValue(ICell cell, Object source) 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Writer.Convertor.Fakes.StubRichTextConvertor.SetValueICellObject">
            <summary>设置 RichTextConvertor.SetValue(ICell cell, Object source) 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.StubRichTextConvertor.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.StubRichTextConvertor.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.StubRichTextConvertor.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Convertor.Fakes.StubTextConvertor">
            <summary>ExportIO.Export.Writer.Convertor.TextConvertor 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.StubTextConvertor.#ctor(System.Func{System.Object,System.String})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.StubTextConvertor.InitializeStub">
            <summary>初始化 type StubTextConvertor 的新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Convertor.Fakes.StubTextConvertor.SetValue(NPOI.SS.UserModel.ICell,System.Object)">
            <summary>设置 TextConvertor.SetValue(ICell cell, Object source) 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Writer.Convertor.Fakes.StubTextConvertor.SetValueICellObject">
            <summary>设置 TextConvertor.SetValue(ICell cell, Object source) 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.StubTextConvertor.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.StubTextConvertor.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Convertor.Fakes.StubTextConvertor.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Fakes.ShimBaseWriter">
            <summary>ExportIO.Export.Writer.BaseWriter 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.ShimBaseWriter.#ctor(ExportIO.Export.Writer.BaseWriter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.ShimBaseWriter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.ShimBaseWriter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimBaseWriter.AfterWriteAddWriteHandler">
            <summary>设置 BaseWriter.add_AfterWrite(WriteHandler value) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimBaseWriter.AfterWriteRemoveWriteHandler">
            <summary>设置 BaseWriter.remove_AfterWrite(WriteHandler value) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimBaseWriter.BeforeWriteAddWriteHandler">
            <summary>设置 BaseWriter.add_BeforeWrite(WriteHandler value) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimBaseWriter.BeforeWriteRemoveWriteHandler">
            <summary>设置 BaseWriter.remove_BeforeWrite(WriteHandler value) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimBaseWriter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimBaseWriter.ConstructorIRuleEntity">
            <summary>设置 BaseWriter.BaseWriter(IRuleEntity entity) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimBaseWriter.EntityGet">
            <summary>设置 BaseWriter.get_Entity() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimBaseWriter.EntitySetIRuleEntity">
            <summary>设置 BaseWriter.set_Entity(IRuleEntity value) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimBaseWriter.OnWriteObjectWriteEventArgs">
            <summary>设置 BaseWriter.OnWrite(Object sender, WriteEventArgs args) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Fakes.ShimBaseWriter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimBaseWriter.AllInstances.AfterWriteAddWriteHandler">
            <summary>设置 BaseWriter.add_AfterWrite(WriteHandler value) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimBaseWriter.AllInstances.AfterWriteRemoveWriteHandler">
            <summary>设置 BaseWriter.remove_AfterWrite(WriteHandler value) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimBaseWriter.AllInstances.BeforeWriteAddWriteHandler">
            <summary>设置 BaseWriter.add_BeforeWrite(WriteHandler value) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimBaseWriter.AllInstances.BeforeWriteRemoveWriteHandler">
            <summary>设置 BaseWriter.remove_BeforeWrite(WriteHandler value) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimBaseWriter.AllInstances.EntityGet">
            <summary>设置 BaseWriter.get_Entity() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimBaseWriter.AllInstances.EntitySetIRuleEntity">
            <summary>设置 BaseWriter.set_Entity(IRuleEntity value) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimBaseWriter.AllInstances.OnWriteObjectWriteEventArgs">
            <summary>设置 BaseWriter.OnWrite(Object sender, WriteEventArgs args) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Fakes.ShimBaseWriterContainer">
            <summary>ExportIO.Export.Writer.BaseWriterContainer 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.ShimBaseWriterContainer.#ctor(ExportIO.Export.Writer.BaseWriterContainer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.ShimBaseWriterContainer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.ShimBaseWriterContainer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimBaseWriterContainer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimBaseWriterContainer.ComponentsGet">
            <summary>设置 BaseWriterContainer.get_Components() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimBaseWriterContainer.ConstructorIRuleEntity">
            <summary>设置 BaseWriterContainer.BaseWriterContainer(IRuleEntity entity) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimBaseWriterContainer.CreateAllSubWriters">
            <summary>设置 BaseWriterContainer.CreateAllSubWriters() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimBaseWriterContainer.EndWriteWriteEventArgs">
            <summary>设置 BaseWriterContainer.EndWrite(WriteEventArgs args) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimBaseWriterContainer.OnWriteObjectWriteEventArgs">
            <summary>设置 BaseWriterContainer.OnWrite(Object sender, WriteEventArgs args) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimBaseWriterContainer.PreWriteWriteEventArgs">
            <summary>设置 BaseWriterContainer.PreWrite(WriteEventArgs args) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimBaseWriterContainer.WritingObjectWriteEventArgs">
            <summary>设置 BaseWriterContainer.Writing(Object sender, WriteEventArgs args) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Fakes.ShimBaseWriterContainer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimBaseWriterContainer.AllInstances.ComponentsGet">
            <summary>设置 BaseWriterContainer.get_Components() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimBaseWriterContainer.AllInstances.CreateAllSubWriters">
            <summary>设置 BaseWriterContainer.CreateAllSubWriters() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimBaseWriterContainer.AllInstances.EndWriteWriteEventArgs">
            <summary>设置 BaseWriterContainer.EndWrite(WriteEventArgs args) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimBaseWriterContainer.AllInstances.OnWriteObjectWriteEventArgs">
            <summary>设置 BaseWriterContainer.OnWrite(Object sender, WriteEventArgs args) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimBaseWriterContainer.AllInstances.PreWriteWriteEventArgs">
            <summary>设置 BaseWriterContainer.PreWrite(WriteEventArgs args) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimBaseWriterContainer.AllInstances.WritingObjectWriteEventArgs">
            <summary>设置 BaseWriterContainer.Writing(Object sender, WriteEventArgs args) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Fakes.ShimCellWriter">
            <summary>ExportIO.Export.Writer.CellWriter 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.ShimCellWriter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.ShimCellWriter.#ctor(ExportIO.Export.Writer.CellWriter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.ShimCellWriter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.ShimCellWriter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimCellWriter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimCellWriter.ConstructorCell">
            <summary>设置 CellWriter.CellWriter(Cell cell) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimCellWriter.WritingObjectWriteEventArgs">
            <summary>设置 CellWriter.Writing(Object sender, WriteEventArgs args) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Fakes.ShimCellWriter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimCellWriter.AllInstances.WritingObjectWriteEventArgs">
            <summary>设置 CellWriter.Writing(Object sender, WriteEventArgs args) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Fakes.ShimCommonEventArgs`2">
            <summary>ExportIO.Export.Writer.CommonEventArgs`2 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.ShimCommonEventArgs`2.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.ShimCommonEventArgs`2.#ctor(ExportIO.Export.Writer.CommonEventArgs{`0,`1})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.ShimCommonEventArgs`2.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.ShimCommonEventArgs`2.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimCommonEventArgs`2.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimCommonEventArgs`2.Constructor">
            <summary>设置 CommonEventArgs`2.CommonEventArgs`2() 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Fakes.ShimCommonEventArgs`2.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Fakes.ShimDynamicAreaWriter">
            <summary>ExportIO.Export.Writer.DynamicAreaWriter 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.ShimDynamicAreaWriter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.ShimDynamicAreaWriter.#ctor(ExportIO.Export.Writer.DynamicAreaWriter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.ShimDynamicAreaWriter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.ShimDynamicAreaWriter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimDynamicAreaWriter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimDynamicAreaWriter.ConstructorDynamicArea">
            <summary>设置 DynamicAreaWriter.DynamicAreaWriter(DynamicArea entity) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimDynamicAreaWriter.CreatingSubWriters">
            <summary>设置 DynamicAreaWriter.CreatingSubWriters() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimDynamicAreaWriter.PreWriteWriteEventArgs">
            <summary>设置 DynamicAreaWriter.PreWrite(WriteEventArgs args) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Fakes.ShimDynamicAreaWriter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimDynamicAreaWriter.AllInstances.CreatingSubWriters">
            <summary>设置 DynamicAreaWriter.CreatingSubWriters() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimDynamicAreaWriter.AllInstances.PreWriteWriteEventArgs">
            <summary>设置 DynamicAreaWriter.PreWrite(WriteEventArgs args) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Fakes.ShimNodeWriter">
            <summary>ExportIO.Export.Writer.NodeWriter 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.ShimNodeWriter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.ShimNodeWriter.#ctor(ExportIO.Export.Writer.NodeWriter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.ShimNodeWriter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.ShimNodeWriter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimNodeWriter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimNodeWriter.ConstructorIListOfOutputNode">
            <summary>设置 NodeWriter.NodeWriter(IList`1&lt;OutputNode&gt; nodes) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimNodeWriter.WriteNodesISheetIListOfOutputNode">
            <summary>设置 NodeWriter.WriteNodes(ISheet exSheet, IList`1&lt;OutputNode&gt; nodes) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimNodeWriter.WritingObjectWriteEventArgs">
            <summary>设置 NodeWriter.Writing(Object sender, WriteEventArgs args) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Fakes.ShimNodeWriter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimNodeWriter.AllInstances.WritingObjectWriteEventArgs">
            <summary>设置 NodeWriter.Writing(Object sender, WriteEventArgs args) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Fakes.ShimProductWriter">
            <summary>ExportIO.Export.Writer.ProductWriter 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.ShimProductWriter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.ShimProductWriter.#ctor(ExportIO.Export.Writer.ProductWriter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.ShimProductWriter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.ShimProductWriter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimProductWriter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimProductWriter.ConstructorProductRule">
            <summary>设置 ProductWriter.ProductWriter(ProductRule productType) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimProductWriter.ConstructorProductRuleDataSetActionOfIWorkbookProductRule">
            <summary>设置 ProductWriter.ProductWriter(ProductRule productType, DataSet dataSet, Action`2&lt;IWorkbook,ProductRule&gt; action) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimProductWriter.CreatingSubWriters">
            <summary>设置 ProductWriter.CreatingSubWriters() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimProductWriter.EndWriteWriteEventArgs">
            <summary>设置 ProductWriter.EndWrite(WriteEventArgs args) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimProductWriter.ExportStream">
            <summary>设置 ProductWriter.Export(Stream stream) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimProductWriter.ExportString">
            <summary>设置 ProductWriter.Export(String filename) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimProductWriter.GetSheetWriterString">
            <summary>设置 ProductWriter.GetSheetWriter(String sheetName) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimProductWriter.GetUnusedSheets">
            <summary>设置 ProductWriter.GetUnusedSheets() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimProductWriter.Init">
            <summary>设置 ProductWriter.Init() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimProductWriter.IsExcel2007Get">
            <summary>设置 ProductWriter.get_IsExcel2007() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimProductWriter.IsExcel2007SetBoolean">
            <summary>设置 ProductWriter.set_IsExcel2007(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimProductWriter.LoadDataDataSet">
            <summary>设置 ProductWriter.LoadData(DataSet datas) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimProductWriter.NewInstanceExportConfigElementDataSetActionOfIWorkbookProductRule">
            <summary>设置 ProductWriter.NewInstance(ExportConfigElement rootElement, DataSet datas, Action`2&lt;IWorkbook,ProductRule&gt; action) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimProductWriter.NewInstanceExportConfigElementString">
            <summary>设置 ProductWriter.NewInstance(ExportConfigElement rootElement, String ruleName) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimProductWriter.ProductRuleGet">
            <summary>设置 ProductWriter.get_ProductRule() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimProductWriter.RemoveDynamicSheetIWorkbook">
            <summary>设置 ProductWriter.RemoveDynamicSheet(IWorkbook book) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimProductWriter.ShrinkSheetIWorkbook">
            <summary>设置 ProductWriter.ShrinkSheet(IWorkbook book) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimProductWriter._GetUnusedSheetsb__0Sheet">
            <summary>设置 ProductWriter.&lt;GetUnusedSheets&gt;b__0(Sheet p) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimProductWriter._RemoveDynamicSheetb__2Sheet">
            <summary>设置 ProductWriter.&lt;RemoveDynamicSheet&gt;b__2(Sheet p) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimProductWriter._RemoveDynamicSheetb__3Sheet">
            <summary>设置 ProductWriter.&lt;RemoveDynamicSheet&gt;b__3(Sheet p) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Fakes.ShimProductWriter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimProductWriter.AllInstances.CreatingSubWriters">
            <summary>设置 ProductWriter.CreatingSubWriters() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimProductWriter.AllInstances.EndWriteWriteEventArgs">
            <summary>设置 ProductWriter.EndWrite(WriteEventArgs args) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimProductWriter.AllInstances.ExportStream">
            <summary>设置 ProductWriter.Export(Stream stream) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimProductWriter.AllInstances.ExportString">
            <summary>设置 ProductWriter.Export(String filename) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimProductWriter.AllInstances.GetSheetWriterString">
            <summary>设置 ProductWriter.GetSheetWriter(String sheetName) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimProductWriter.AllInstances.GetUnusedSheets">
            <summary>设置 ProductWriter.GetUnusedSheets() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimProductWriter.AllInstances.Init">
            <summary>设置 ProductWriter.Init() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimProductWriter.AllInstances.IsExcel2007Get">
            <summary>设置 ProductWriter.get_IsExcel2007() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimProductWriter.AllInstances.IsExcel2007SetBoolean">
            <summary>设置 ProductWriter.set_IsExcel2007(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimProductWriter.AllInstances.LoadDataDataSet">
            <summary>设置 ProductWriter.LoadData(DataSet datas) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimProductWriter.AllInstances.ProductRuleGet">
            <summary>设置 ProductWriter.get_ProductRule() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimProductWriter.AllInstances.RemoveDynamicSheetIWorkbook">
            <summary>设置 ProductWriter.RemoveDynamicSheet(IWorkbook book) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimProductWriter.AllInstances.ShrinkSheetIWorkbook">
            <summary>设置 ProductWriter.ShrinkSheet(IWorkbook book) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Fakes.ShimRegionWriter">
            <summary>ExportIO.Export.Writer.RegionWriter 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.ShimRegionWriter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.ShimRegionWriter.#ctor(ExportIO.Export.Writer.RegionWriter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.ShimRegionWriter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.ShimRegionWriter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimRegionWriter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimRegionWriter.ConstructorRegionTable">
            <summary>设置 RegionWriter.RegionWriter(RegionTable entity) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimRegionWriter.GetStandardCellISheetInt32Int32Boolean">
            <summary>设置 RegionWriter.GetStandardCell(ISheet sheet, Int32 rowIndex, Int32 colIndex, Boolean isTitle) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimRegionWriter.WritingObjectWriteEventArgs">
            <summary>设置 RegionWriter.Writing(Object sender, WriteEventArgs args) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Fakes.ShimRegionWriter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimRegionWriter.AllInstances.GetStandardCellISheetInt32Int32Boolean">
            <summary>设置 RegionWriter.GetStandardCell(ISheet sheet, Int32 rowIndex, Int32 colIndex, Boolean isTitle) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimRegionWriter.AllInstances.WritingObjectWriteEventArgs">
            <summary>设置 RegionWriter.Writing(Object sender, WriteEventArgs args) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Fakes.ShimSheetWriter">
            <summary>ExportIO.Export.Writer.SheetWriter 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.ShimSheetWriter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.ShimSheetWriter.#ctor(ExportIO.Export.Writer.SheetWriter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.ShimSheetWriter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.ShimSheetWriter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimSheetWriter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimSheetWriter.ConstructorISheetSheet">
            <summary>设置 SheetWriter.SheetWriter(ISheet exSheet, Sheet sheet) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimSheetWriter.CreateComponentISheetSheet">
            <summary>设置 SheetWriter.CreateComponent(ISheet exSheet, Sheet sheet) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimSheetWriter.CreatingSubWriters">
            <summary>设置 SheetWriter.CreatingSubWriters() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimSheetWriter.EndWriteWriteEventArgs">
            <summary>设置 SheetWriter.EndWrite(WriteEventArgs args) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimSheetWriter.IsDynamicGet">
            <summary>设置 SheetWriter.get_IsDynamic() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimSheetWriter.PreWriteWriteEventArgs">
            <summary>设置 SheetWriter.PreWrite(WriteEventArgs args) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimSheetWriter.SheetGet">
            <summary>设置 SheetWriter.get_Sheet() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimSheetWriter.SheetSetSheet">
            <summary>设置 SheetWriter.set_Sheet(Sheet value) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Fakes.ShimSheetWriter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimSheetWriter.AllInstances.CreateComponentISheetSheet">
            <summary>设置 SheetWriter.CreateComponent(ISheet exSheet, Sheet sheet) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimSheetWriter.AllInstances.CreatingSubWriters">
            <summary>设置 SheetWriter.CreatingSubWriters() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimSheetWriter.AllInstances.EndWriteWriteEventArgs">
            <summary>设置 SheetWriter.EndWrite(WriteEventArgs args) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimSheetWriter.AllInstances.IsDynamicGet">
            <summary>设置 SheetWriter.get_IsDynamic() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimSheetWriter.AllInstances.PreWriteWriteEventArgs">
            <summary>设置 SheetWriter.PreWrite(WriteEventArgs args) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimSheetWriter.AllInstances.SheetGet">
            <summary>设置 SheetWriter.get_Sheet() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimSheetWriter.AllInstances.SheetSetSheet">
            <summary>设置 SheetWriter.set_Sheet(Sheet value) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Fakes.ShimTableWriter">
            <summary>ExportIO.Export.Writer.TableWriter 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.ShimTableWriter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.ShimTableWriter.#ctor(ExportIO.Export.Writer.TableWriter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.ShimTableWriter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.ShimTableWriter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimTableWriter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimTableWriter.ClearMergeRegionIRowInt32Int32">
            <summary>设置 TableWriter.ClearMergeRegion(IRow row, Int32 fromCol, Int32 endCol) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimTableWriter.ConstructorTable">
            <summary>设置 TableWriter.TableWriter(Table entity) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimTableWriter.WritingObjectWriteEventArgs">
            <summary>设置 TableWriter.Writing(Object sender, WriteEventArgs args) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimTableWriter._ClearMergeRegionb__0Int32">
            <summary>设置 TableWriter.&lt;ClearMergeRegion&gt;b__0(Int32 p) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Fakes.ShimTableWriter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimTableWriter.AllInstances.ClearMergeRegionIRowInt32Int32">
            <summary>设置 TableWriter.ClearMergeRegion(IRow row, Int32 fromCol, Int32 endCol) 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimTableWriter.AllInstances.WritingObjectWriteEventArgs">
            <summary>设置 TableWriter.Writing(Object sender, WriteEventArgs args) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Fakes.ShimWriteEventArgs">
            <summary>ExportIO.Export.Writer.WriteEventArgs 的填充码类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.ShimWriteEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.ShimWriteEventArgs.#ctor(ExportIO.Export.Writer.WriteEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.ShimWriteEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.ShimWriteEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimWriteEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimWriteEventArgs.Constructor">
            <summary>设置 WriteEventArgs.WriteEventArgs() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimWriteEventArgs.ExSheetGet">
            <summary>设置 WriteEventArgs.get_ExSheet() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimWriteEventArgs.ExSheetSetISheet">
            <summary>设置 WriteEventArgs.set_ExSheet(ISheet value) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Fakes.ShimWriteEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimWriteEventArgs.AllInstances.ExSheetGet">
            <summary>设置 WriteEventArgs.get_ExSheet() 的 填充码</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.ShimWriteEventArgs.AllInstances.ExSheetSetISheet">
            <summary>设置 WriteEventArgs.set_ExSheet(ISheet value) 的 填充码</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Fakes.StubBaseWriter">
            <summary>ExportIO.Export.Writer.BaseWriter 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubBaseWriter.#ctor(ExportIO.Export.Entity.IRuleEntity)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubBaseWriter.InitializeStub">
            <summary>初始化 type StubBaseWriter 的新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubBaseWriter.OnWrite(System.Object,ExportIO.Export.Writer.WriteEventArgs)">
            <summary>设置 BaseWriter.OnWrite(Object sender, WriteEventArgs args) 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Writer.Fakes.StubBaseWriter.OnWriteObjectWriteEventArgs">
            <summary>设置 BaseWriter.OnWrite(Object sender, WriteEventArgs args) 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubBaseWriter.Writing(System.Object,ExportIO.Export.Writer.WriteEventArgs)">
            <summary>设置 BaseWriter.Writing(Object sender, WriteEventArgs args) 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Writer.Fakes.StubBaseWriter.WritingObjectWriteEventArgs">
            <summary>设置 BaseWriter.Writing(Object sender, WriteEventArgs args) 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.StubBaseWriter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.StubBaseWriter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.StubBaseWriter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Fakes.StubBaseWriterContainer">
            <summary>ExportIO.Export.Writer.BaseWriterContainer 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubBaseWriterContainer.#ctor(ExportIO.Export.Entity.IRuleEntity)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubBaseWriterContainer.CreatingSubWriters">
            <summary>设置 BaseWriterContainer.CreatingSubWriters() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Writer.Fakes.StubBaseWriterContainer.CreatingSubWriters01">
            <summary>设置 BaseWriterContainer.CreatingSubWriters() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubBaseWriterContainer.EndWrite(ExportIO.Export.Writer.WriteEventArgs)">
            <summary>设置 BaseWriterContainer.EndWrite(WriteEventArgs args) 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Writer.Fakes.StubBaseWriterContainer.EndWriteWriteEventArgs">
            <summary>设置 BaseWriterContainer.EndWrite(WriteEventArgs args) 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubBaseWriterContainer.InitializeStub">
            <summary>初始化 type StubBaseWriterContainer 的新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubBaseWriterContainer.OnWrite(System.Object,ExportIO.Export.Writer.WriteEventArgs)">
            <summary>设置 BaseWriterContainer.OnWrite(Object sender, WriteEventArgs args) 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Writer.Fakes.StubBaseWriterContainer.OnWriteObjectWriteEventArgs">
            <summary>设置 BaseWriterContainer.OnWrite(Object sender, WriteEventArgs args) 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubBaseWriterContainer.PreWrite(ExportIO.Export.Writer.WriteEventArgs)">
            <summary>设置 BaseWriterContainer.PreWrite(WriteEventArgs args) 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Writer.Fakes.StubBaseWriterContainer.PreWriteWriteEventArgs">
            <summary>设置 BaseWriterContainer.PreWrite(WriteEventArgs args) 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubBaseWriterContainer.Writing(System.Object,ExportIO.Export.Writer.WriteEventArgs)">
            <summary>设置 BaseWriterContainer.Writing(Object sender, WriteEventArgs args) 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Writer.Fakes.StubBaseWriterContainer.WritingObjectWriteEventArgs">
            <summary>设置 BaseWriterContainer.Writing(Object sender, WriteEventArgs args) 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.StubBaseWriterContainer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.StubBaseWriterContainer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.StubBaseWriterContainer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Fakes.StubCellWriter">
            <summary>ExportIO.Export.Writer.CellWriter 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubCellWriter.#ctor(ExportIO.Export.Entity.Cell)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubCellWriter.InitializeStub">
            <summary>初始化 type StubCellWriter 的新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubCellWriter.OnWrite(System.Object,ExportIO.Export.Writer.WriteEventArgs)">
            <summary>设置 BaseWriter.OnWrite(Object sender, WriteEventArgs args) 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Writer.Fakes.StubCellWriter.OnWriteObjectWriteEventArgs">
            <summary>设置 BaseWriter.OnWrite(Object sender, WriteEventArgs args) 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubCellWriter.Writing(System.Object,ExportIO.Export.Writer.WriteEventArgs)">
            <summary>设置 CellWriter.Writing(Object sender, WriteEventArgs args) 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Writer.Fakes.StubCellWriter.WritingObjectWriteEventArgs">
            <summary>设置 CellWriter.Writing(Object sender, WriteEventArgs args) 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.StubCellWriter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.StubCellWriter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.StubCellWriter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Fakes.StubCommonEventArgs`2">
            <summary>ExportIO.Export.Writer.CommonEventArgs`2 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubCommonEventArgs`2.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubCommonEventArgs`2.InitializeStub">
            <summary>初始化 type StubCommonEventArgs 的新实例</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.StubCommonEventArgs`2.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.StubCommonEventArgs`2.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.StubCommonEventArgs`2.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Fakes.StubDynamicAreaWriter">
            <summary>ExportIO.Export.Writer.DynamicAreaWriter 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubDynamicAreaWriter.#ctor(ExportIO.Export.Entity.DynamicArea)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubDynamicAreaWriter.CreatingSubWriters">
            <summary>设置 DynamicAreaWriter.CreatingSubWriters() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Writer.Fakes.StubDynamicAreaWriter.CreatingSubWriters01">
            <summary>设置 DynamicAreaWriter.CreatingSubWriters() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubDynamicAreaWriter.EndWrite(ExportIO.Export.Writer.WriteEventArgs)">
            <summary>设置 BaseWriterContainer.EndWrite(WriteEventArgs args) 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Writer.Fakes.StubDynamicAreaWriter.EndWriteWriteEventArgs">
            <summary>设置 BaseWriterContainer.EndWrite(WriteEventArgs args) 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubDynamicAreaWriter.InitializeStub">
            <summary>初始化 type StubDynamicAreaWriter 的新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubDynamicAreaWriter.OnWrite(System.Object,ExportIO.Export.Writer.WriteEventArgs)">
            <summary>设置 BaseWriterContainer.OnWrite(Object sender, WriteEventArgs args) 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Writer.Fakes.StubDynamicAreaWriter.OnWriteObjectWriteEventArgs">
            <summary>设置 BaseWriterContainer.OnWrite(Object sender, WriteEventArgs args) 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubDynamicAreaWriter.PreWrite(ExportIO.Export.Writer.WriteEventArgs)">
            <summary>设置 DynamicAreaWriter.PreWrite(WriteEventArgs args) 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Writer.Fakes.StubDynamicAreaWriter.PreWriteWriteEventArgs">
            <summary>设置 DynamicAreaWriter.PreWrite(WriteEventArgs args) 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubDynamicAreaWriter.Writing(System.Object,ExportIO.Export.Writer.WriteEventArgs)">
            <summary>设置 BaseWriterContainer.Writing(Object sender, WriteEventArgs args) 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Writer.Fakes.StubDynamicAreaWriter.WritingObjectWriteEventArgs">
            <summary>设置 BaseWriterContainer.Writing(Object sender, WriteEventArgs args) 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.StubDynamicAreaWriter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.StubDynamicAreaWriter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.StubDynamicAreaWriter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Fakes.StubNodeWriter">
            <summary>ExportIO.Export.Writer.NodeWriter 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubNodeWriter.#ctor(System.Collections.Generic.IList{ExportIO.Export.Entity.OutputNode})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubNodeWriter.InitializeStub">
            <summary>初始化 type StubNodeWriter 的新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubNodeWriter.OnWrite(System.Object,ExportIO.Export.Writer.WriteEventArgs)">
            <summary>设置 BaseWriter.OnWrite(Object sender, WriteEventArgs args) 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Writer.Fakes.StubNodeWriter.OnWriteObjectWriteEventArgs">
            <summary>设置 BaseWriter.OnWrite(Object sender, WriteEventArgs args) 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubNodeWriter.Writing(System.Object,ExportIO.Export.Writer.WriteEventArgs)">
            <summary>设置 NodeWriter.Writing(Object sender, WriteEventArgs args) 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Writer.Fakes.StubNodeWriter.WritingObjectWriteEventArgs">
            <summary>设置 NodeWriter.Writing(Object sender, WriteEventArgs args) 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.StubNodeWriter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.StubNodeWriter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.StubNodeWriter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Fakes.StubProductWriter">
            <summary>ExportIO.Export.Writer.ProductWriter 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubProductWriter.#ctor(ExportIO.Export.Entity.ProductRule)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubProductWriter.#ctor(ExportIO.Export.Entity.ProductRule,System.Data.DataSet,System.Action{NPOI.SS.UserModel.IWorkbook,ExportIO.Export.Entity.ProductRule})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubProductWriter.CreatingSubWriters">
            <summary>设置 ProductWriter.CreatingSubWriters() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Writer.Fakes.StubProductWriter.CreatingSubWriters01">
            <summary>设置 ProductWriter.CreatingSubWriters() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubProductWriter.EndWrite(ExportIO.Export.Writer.WriteEventArgs)">
            <summary>设置 ProductWriter.EndWrite(WriteEventArgs args) 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Writer.Fakes.StubProductWriter.EndWriteWriteEventArgs">
            <summary>设置 ProductWriter.EndWrite(WriteEventArgs args) 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubProductWriter.InitializeStub">
            <summary>初始化 type StubProductWriter 的新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubProductWriter.OnWrite(System.Object,ExportIO.Export.Writer.WriteEventArgs)">
            <summary>设置 BaseWriterContainer.OnWrite(Object sender, WriteEventArgs args) 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Writer.Fakes.StubProductWriter.OnWriteObjectWriteEventArgs">
            <summary>设置 BaseWriterContainer.OnWrite(Object sender, WriteEventArgs args) 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubProductWriter.PreWrite(ExportIO.Export.Writer.WriteEventArgs)">
            <summary>设置 BaseWriterContainer.PreWrite(WriteEventArgs args) 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Writer.Fakes.StubProductWriter.PreWriteWriteEventArgs">
            <summary>设置 BaseWriterContainer.PreWrite(WriteEventArgs args) 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubProductWriter.Writing(System.Object,ExportIO.Export.Writer.WriteEventArgs)">
            <summary>设置 BaseWriterContainer.Writing(Object sender, WriteEventArgs args) 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Writer.Fakes.StubProductWriter.WritingObjectWriteEventArgs">
            <summary>设置 BaseWriterContainer.Writing(Object sender, WriteEventArgs args) 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.StubProductWriter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.StubProductWriter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.StubProductWriter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Fakes.StubRegionWriter">
            <summary>ExportIO.Export.Writer.RegionWriter 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubRegionWriter.#ctor(ExportIO.Export.Entity.Region.RegionTable)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubRegionWriter.InitializeStub">
            <summary>初始化 type StubRegionWriter 的新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubRegionWriter.OnWrite(System.Object,ExportIO.Export.Writer.WriteEventArgs)">
            <summary>设置 BaseWriter.OnWrite(Object sender, WriteEventArgs args) 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Writer.Fakes.StubRegionWriter.OnWriteObjectWriteEventArgs">
            <summary>设置 BaseWriter.OnWrite(Object sender, WriteEventArgs args) 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubRegionWriter.Writing(System.Object,ExportIO.Export.Writer.WriteEventArgs)">
            <summary>设置 RegionWriter.Writing(Object sender, WriteEventArgs args) 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Writer.Fakes.StubRegionWriter.WritingObjectWriteEventArgs">
            <summary>设置 RegionWriter.Writing(Object sender, WriteEventArgs args) 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.StubRegionWriter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.StubRegionWriter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.StubRegionWriter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Fakes.StubSheetWriter">
            <summary>ExportIO.Export.Writer.SheetWriter 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubSheetWriter.#ctor(NPOI.SS.UserModel.ISheet,ExportIO.Export.Entity.Sheet)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubSheetWriter.CreatingSubWriters">
            <summary>设置 SheetWriter.CreatingSubWriters() 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Writer.Fakes.StubSheetWriter.CreatingSubWriters01">
            <summary>设置 SheetWriter.CreatingSubWriters() 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubSheetWriter.EndWrite(ExportIO.Export.Writer.WriteEventArgs)">
            <summary>设置 SheetWriter.EndWrite(WriteEventArgs args) 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Writer.Fakes.StubSheetWriter.EndWriteWriteEventArgs">
            <summary>设置 SheetWriter.EndWrite(WriteEventArgs args) 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubSheetWriter.InitializeStub">
            <summary>初始化 type StubSheetWriter 的新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubSheetWriter.OnWrite(System.Object,ExportIO.Export.Writer.WriteEventArgs)">
            <summary>设置 BaseWriterContainer.OnWrite(Object sender, WriteEventArgs args) 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Writer.Fakes.StubSheetWriter.OnWriteObjectWriteEventArgs">
            <summary>设置 BaseWriterContainer.OnWrite(Object sender, WriteEventArgs args) 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubSheetWriter.PreWrite(ExportIO.Export.Writer.WriteEventArgs)">
            <summary>设置 SheetWriter.PreWrite(WriteEventArgs args) 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Writer.Fakes.StubSheetWriter.PreWriteWriteEventArgs">
            <summary>设置 SheetWriter.PreWrite(WriteEventArgs args) 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubSheetWriter.Writing(System.Object,ExportIO.Export.Writer.WriteEventArgs)">
            <summary>设置 BaseWriterContainer.Writing(Object sender, WriteEventArgs args) 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Writer.Fakes.StubSheetWriter.WritingObjectWriteEventArgs">
            <summary>设置 BaseWriterContainer.Writing(Object sender, WriteEventArgs args) 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.StubSheetWriter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.StubSheetWriter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.StubSheetWriter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Fakes.StubTableWriter">
            <summary>ExportIO.Export.Writer.TableWriter 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubTableWriter.#ctor(ExportIO.Export.Entity.Table)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubTableWriter.InitializeStub">
            <summary>初始化 type StubTableWriter 的新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubTableWriter.OnWrite(System.Object,ExportIO.Export.Writer.WriteEventArgs)">
            <summary>设置 BaseWriter.OnWrite(Object sender, WriteEventArgs args) 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Writer.Fakes.StubTableWriter.OnWriteObjectWriteEventArgs">
            <summary>设置 BaseWriter.OnWrite(Object sender, WriteEventArgs args) 的 stub</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubTableWriter.Writing(System.Object,ExportIO.Export.Writer.WriteEventArgs)">
            <summary>设置 TableWriter.Writing(Object sender, WriteEventArgs args) 的 存根</summary>
        </member>
        <member name="F:ExportIO.Export.Writer.Fakes.StubTableWriter.WritingObjectWriteEventArgs">
            <summary>设置 TableWriter.Writing(Object sender, WriteEventArgs args) 的 stub</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.StubTableWriter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.StubTableWriter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.StubTableWriter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:ExportIO.Export.Writer.Fakes.StubWriteEventArgs">
            <summary>ExportIO.Export.Writer.WriteEventArgs 的存根类型</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubWriteEventArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:ExportIO.Export.Writer.Fakes.StubWriteEventArgs.InitializeStub">
            <summary>初始化 type StubWriteEventArgs 的新实例</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.StubWriteEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.StubWriteEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:ExportIO.Export.Writer.Fakes.StubWriteEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
    </members>
</doc>
